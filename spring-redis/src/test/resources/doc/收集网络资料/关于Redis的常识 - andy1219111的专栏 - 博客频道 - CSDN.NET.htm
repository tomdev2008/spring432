
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
     
    <html xmlns="http://www.w3.org/1999/xhtml">
    
<head>  

    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>  

    <script type="text/javascript">
        var protocol = window.location.protocol;
        document.write('<script type="text/javascript" src="' + protocol + '//csdnimg.cn/pubfooter/js/repoAddr2.js?v=' + Math.random() + '"></' + 'script>');
    </script>

  
 <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />

    <title>关于Redis的常识 - andy1219111的专栏
        - 博客频道 - CSDN.NET</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="description" content="0INRMumLsiQwT0xVgvYVmNCBWS7mV8LzSeLOZGHzflL3ziBSx+iej3G1syAeYvPZxqagQ0P7mgdX/qgnEWWuIcv4cTR6ZI5QNmqULAGtRkCtCNsphAD7cLBiV7UpV7yvURpKw6H8jHyDDZc8zP5P8QF9abbRoeoTcPcDs/Ij0+JSX9fkdkqCvmUFYzy/GBb+hMWJ" />
    <script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
      <script type="text/javascript" src="http://static.blog.csdn.net/scripts/jquery-version.js"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
        <!--new top-->
               <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/css/index.css">        <!--new top-->
    
      <!-- ad begin -->
         <script language="javascript" type="text/javascript" src="http://ads.csdn.net/js/tracking.js"></script>
    <!-- ad end-->

    <link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/dark1/css/style.css?v=1.1" />
    <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/andy1219111/rss/list" />
    <link rel="shortcut icon" href="http://c.csdnimg.cn/public/favicon.ico" />
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/blue.css" />
 


<script>
    var _hmt = _hmt || [];
    (function () {
        var hm = document.createElement("script");
        hm.src = "//hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
    })();
</script>

</head>
<body>


    <!-- 广告位开始 -->
        <ins data-revive-zoneid="149" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins>
    <!-- 广告位结束 -->

    
   
      <!--new top-->
    <script id="toolbar-tpl-scriptId" fixed="true" prod="blog" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/html.js" type="text/javascript"></script>
     <!--new top-->
    <div id="container">
        <div id="header">
    <div class="header">
        <div id="blog_title">
            <h2>
                <a href="http://blog.csdn.net/andy1219111">andy1219111的专栏</a></h2>
            <h3>西安的phper，希望能结识更多的朋友，多多交流</h3>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
        
     
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>           
                <li id="btnContents"><a href="http://blog.csdn.net/andy1219111?viewmode=contents"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_mulu'])">
                    <img src="http://static.blog.csdn.net/images/ico_list.gif">目录视图</span></a></li>
                <li id="btnView"><a href="http://blog.csdn.net/andy1219111?viewmode=list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_zhaiyao'])">
                    <img src="http://static.blog.csdn.net/images/ico_summary.gif">摘要视图</span></a></li>
                <li id="btnRss"><a href="http://blog.csdn.net/andy1219111/rss/list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_RSS'])">
                    <img src="http://static.blog.csdn.net/images/ico_rss.gif">订阅</span></a></li>                
            

            </ul>
    </div>
</div>
<script type="text/javascript">
    var username = "andy1219111";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/andy1219111";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";  
</script>

        <div id="body">
            <div id="main">
                <div class="main">
                        <div class="ad_class">
<div class="notice tracking-ad" data-mod='popu_3' > 


<a href="http://geek.csdn.net/news/detail/134790
">
<font color=blue>CSDN学院招募微信小程序讲师啦


</font></a>

&nbsp;&nbsp;&nbsp;&nbsp

<a href="http://edu.csdn.net/huiyiCourse/detail/274
">
<font color=red>程序员简历优化指南！ 
</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/PK.html">
<font color=blue>【观点】移动原生App开发 PK HTML 5开发
</font></a>

&nbsp;&nbsp;&nbsp;

<a href="http://bss.csdn.net/m/product/aliyun_essay/index
">
<font color=red>云端应用征文大赛，秀绝招，赢无人机！
</font></a>


</div>                        </div>
                        



  
<link href="http://static.blog.csdn.net/css/comment1.css" type="text/css" rel="stylesheet" />
<link href="http://static.blog.csdn.net/css/style1.css" type="text/css" rel="stylesheet" />
<script language='JavaScript' type='text/javascript' src='http://download.csdn.net/js/jquery.cookie.js'></script>
<script type="text/javascript" src="http://c.csdnimg.cn/rabbit/search-service/main.js"></script>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=1.0" />
<link rel="stylesheet" href="http://static.blog.csdn.net/css/category.css?v=1.0" />
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/web-storage-cache.min.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/replace.min.js"></script>




  <script type="text/ecmascript">
      window.quickReplyflag = true;
           
            var isBole = false;
            
      
      var fasrc="http://my.csdn.net/my/favorite/miniadd?t=%e5%85%b3%e4%ba%8eRedis%e7%9a%84%e5%b8%b8%e8%af%86&u=http://blog.csdn.net/andy1219111/article/details/18984355"

    </script>
<div id="article_details" class="details">
    <div class="article_title">   
         <span class="ico ico_type_Repost"></span>


    <h1>
        <span class="link_title"><a href="/andy1219111/article/details/18984355">
        关于Redis的常识            
        </a></span>
    </h1>
</div>

   

        <div class="article_manage clearfix">
        <div class="article_r">
            <span class="link_postdate">2014-02-08 13:49</span>
            <span class="link_view" title="阅读次数">8273人阅读</span>
            <span class="link_comments" title="评论次数"> <a href="#comments" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_pinglun'])">评论</a>(1)</span>
            <span class="link_collect tracking-ad" data-mod="popu_171"> <a href="javascript:void(0);" onclick="javascript:collectArticle('%e5%85%b3%e4%ba%8eRedis%e7%9a%84%e5%b8%b8%e8%af%86','18984355');return false;" title="收藏">收藏</a></span>
             <span class="link_report"> <a href="#report" onclick="javascript:report(18984355,2);return false;" title="举报">举报</a></span>

        </div>
    </div>
    <div class="embody"  style="display:none" id="embody">
        <span class="embody_t">本文章已收录于：</span>
        <div class="embody_c" id="lib" value="{&quot;err&quot;:0,&quot;msg&quot;:&quot;ok&quot;,&quot;data&quot;:[]}"></div>
    </div>
    <style type="text/css">        
            .embody{
                padding:10px 10px 10px;
                margin:0 -20px;
                border-bottom:solid 1px #ededed;                
            }
            .embody_b{
                margin:0 ;
                padding:10px 0;
            }
            .embody .embody_t,.embody .embody_c{
                display: inline-block;
                margin-right:10px;
            }
            .embody_t{
                font-size: 12px;
                color:#999;
            }
            .embody_c{
                font-size: 12px;
            }
            .embody_c img,.embody_c em{
                display: inline-block;
                vertical-align: middle;               
            }
             .embody_c img{               
                width:30px;
                height:30px;
            }
            .embody_c em{
                margin: 0 20px 0 10px;
                color:#333;
                font-style: normal;
            }
    </style>
    <script  type="text/javascript">
        $(function () {
            try
            {
                var lib = eval("("+$("#lib").attr("value")+")");
                var html = "";
                if (lib.err == 0) {
                    $.each(lib.data, function (i) {
                        var obj = lib.data[i];
                        //html += '<img src="' + obj.logo + '"/>' + obj.name + "&nbsp;&nbsp;";
                        html += ' <a href="' + obj.url + '" target="_blank">';
                        html += ' <img src="' + obj.logo + '">';
                        html += ' <em><b>' + obj.name + '</b></em>';
                        html += ' </a>';
                    });
                    if (html != "") {
                        setTimeout(function () {
                            $("#lib").html(html);                      
                            $("#embody").show();
                        }, 100);
                    }
                }      
            } catch (err)
            { }
            
        });
    </script>
      <div class="category clearfix">
        <div class="category_l">
           <img src="http://static.blog.csdn.net/images/category_icon.jpg">
            <span>分类：</span>
        </div>
        <div class="category_r">
                    <label  onclick="GetCategoryArticles('1074018','andy1219111','top','18984355');">
                        <span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_fenlei']);">学习笔记<em>（32）</em></span>
                      <img class="arrow-down" src="http://static.blog.csdn.net/images/arrow_triangle _down.jpg" style="display:inline;">
                      <img class="arrow-up" src="http://static.blog.csdn.net/images/arrow_triangle_up.jpg" style="display:none;">
                        <div class="subItem">
                            <div class="subItem_t"><a  href="http://blog.csdn.net/andy1219111/article/category/1074018"  target="_blank">作者同类文章</a><i class="J_close">X</i></div>
                            <ul class="subItem_l" id="top_1074018">                            
                            </ul>
                        </div>
                    </label>                    
                    <label  onclick="GetCategoryArticles('1070995','andy1219111','top','18984355');">
                        <span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_fenlei']);">php开发<em>（50）</em></span>
                      <img class="arrow-down" src="http://static.blog.csdn.net/images/arrow_triangle _down.jpg" style="display:inline;">
                      <img class="arrow-up" src="http://static.blog.csdn.net/images/arrow_triangle_up.jpg" style="display:none;">
                        <div class="subItem">
                            <div class="subItem_t"><a  href="http://blog.csdn.net/andy1219111/article/category/1070995"  target="_blank">作者同类文章</a><i class="J_close">X</i></div>
                            <ul class="subItem_l" id="top_1070995">                            
                            </ul>
                        </div>
                    </label>                    
        </div>
    </div>
    <script   type="text/javascript" src="http://static.blog.csdn.net/scripts/category.js"></script>  

  

  
  
     

<div id="article_content" class="article_content">

<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
1. Overview</h2>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="11-%E8%B5%84%E6%96%99" href="https://github.com/springside/springside4/wiki/redis#11-%E8%B5%84%E6%96%99" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>1.1 资料</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://openmymind.net/2012/1/23/The-Little-Redis-Book/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">&lt;The Little Redis Book&gt;</a>&nbsp;，最好的入门小册子，可以先于一切文档之前看，免费。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://antirez.com/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">作者Antirez的博客</a>，<a target="_blank" href="https://twitter.com/redisfeed" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Antirez维护的Redis推特</a>。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis 命令中文版</a>，&nbsp;<a target="_blank" href="http://weibo.com/huangz1990" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">huangz</a>同学的翻译。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://www.redisbook.com/en/latest/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis设计与实现</a>&nbsp;，又是huangz同学的巨作，深入了解内部实现机制。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="https://github.com/huangz1990/annotated_redis_source/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis 2.6源码中文注释版</a>&nbsp;，继续是huangz同学的大功德。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://blog.nosqlfan.com/topics/redis" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">NoSQL Fan里的Redis分类</a></li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://www.manning.com/carlson/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">《Redis in Action》</a>&nbsp;(Manning, 2013) MEAP版，看目录挺实战，亚马逊中国预售250元人民币。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="12-%E4%BC%98%E7%BC%BA%E7%82%B9" href="https://github.com/springside/springside4/wiki/redis#12-%E4%BC%98%E7%BC%BA%E7%82%B9" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>1.2 优缺点</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
非常非常的快，有测评说比Memcached还快(当大家都是单CPU的时候)，而且是无短板的快，读写都一般的快，所有API都差不多快，也没有MySQL Cluster、MongoDB那样更新同一条记录如Counter时慢下去的毛病。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
丰富的数据结构，超越了一般的Key-Value数据库而被认为是一个数据结构服务器。组合各种结构，限制Redis用途的是你自己的想象力，作者自己捉刀写的<a target="_blank" href="http://oldblog.antirez.com/post/take-advantage-of-redis-adding-it-to-your-stack.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">用途入门</a></p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
因为是个人作品，Redis目前只有2.3万行代码，Keep it simple的死硬做法，使得普通公司而不需淘宝那个级别的文艺公司也可以吃透它。<a target="_blank" href="http://oldblog.antirez.com/post/redis-manifesto.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis宣言</a>就是作者的自白，我最喜欢其中的“代码像首诗”，”设计是一场与复杂性的战斗“，“Coding是一件艰苦的事情，唯一的办法是享受它。如果它已不能带来快乐就停止它。为了防止这一天的出现，我们要尽量避免把Redis往乏味的路上带。”</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
让人又爱又恨的单线程架构，使得代码不用处理平时最让人头痛的并发而大幅简化，但也带来CPU的瓶颈，而且单线程被慢操作所阻塞时，其他请求的延时变得不确定。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
那Redis不是什么？</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">Redis 不是Big Data，数据都在内存中，无法以T为单位。</li><li style="border:0px; margin:0px; padding:0px">在Redis-Cluster发布并被稳定使用之前，Redis没有真正的平滑水平扩展能力。</li><li style="border:0px; margin:0px; padding:0px">Redis 不支持Ad-Hoc Query，提供的只是数据结构的API，没有SQL一样的查询能力。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="13-feature%E9%80%9F%E8%A7%88" href="https://github.com/springside/springside4/wiki/redis#13-feature%E9%80%9F%E8%A7%88" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>1.3 Feature速览</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">所有数据都在内存中。</li><li style="border:0px; margin:0px; padding:0px">五种数据结构：String / Hash / List / Set / Ordered Set。</li><li style="border:0px; margin:0px; padding:0px">数据过期时间支持。</li><li style="border:0px; margin:0px; padding:0px">不完全的事务支持。</li><li style="border:0px; margin:0px; padding:0px">服务端脚本：使用Lua Script编写，类&#20284;存储过程的作用。</li><li style="border:0px; margin:0px; padding:0px">PubSub：捞过界的消息一对多发布订阅功能，起码Redis-Sentinel使用了它。</li><li style="border:0px; margin:0px; padding:0px">持久化：支持定期导出内存的Snapshot 与 记录写操作日志的Append Only File两种模式。</li><li style="border:0px; margin:0px; padding:0px">Replication：Master-Slave模式，Master可连接多个只读Slave，暂无专门的Geographic Replication支持。</li><li style="border:0px; margin:0px; padding:0px">Fail-Over：Redis-Sentinel节点负责监控Master节点，在master失效时提升slave，独立的仲裁节点模式有效防止脑裂。</li><li style="border:0px; margin:0px; padding:0px">Sharding：开发中的Redis-Cluser。</li><li style="border:0px; margin:0px; padding:0px">动态配置：所有参数可用命令行动态配置不需重启，并重新写回配置文件中，对云上的大规模部署非常合适。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="14-%E5%85%AB%E5%8D%A6" href="https://github.com/springside/springside4/wiki/redis#14-%E5%85%AB%E5%8D%A6" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>1.4 八卦</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">作者是意大利的Salvatore Sanfilippo(antirez)，又是VMWare大善人聘请了他专心写Redis。</li><li style="border:0px; margin:0px; padding:0px">antirez和我一样不喜欢搞什么咨询服务，不过最近VMWare旗下的<span class="wp_keywordlink" style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://blog.jobbole.com/24057/" title="Pivot — 创业者最重要的本领" rel="nofollow" target="_blank" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Pivot</a></span>al公司开始招聘Redis
 Commericial Engineer。</li><li style="border:0px; margin:0px; padding:0px">默认端口6379，是手机按键上MERZ对应的号码，意大利歌女Alessia Merz是antirez和朋友们认为愚蠢的代名词。</li></ul>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="2-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84" href="https://github.com/springside/springside4/wiki/redis#2-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.
 数据结构</h2>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="21-key" href="https://github.com/springside/springside4/wiki/redis#21-key" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.1 Key</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">Key 不能太长，比如1024字节，但antirez也不喜欢太短如”u:1000:pwd”，要表达清楚意思才好。他私人建议用”:”分隔域，用”.”作为单词间的连接，如”comment:1234:reply.to”。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/key/keys.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Keys</a>，返回匹配的key，支持通配符如 “keys
 a*” 、 “keys a?c”，但不建议在生产环境大数据量下使用。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/key/sort.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Sort</a>，对集合按数字或字母顺序排序后返回或另存为list，还可以关联到外部key等。因为复杂度是最高的O(N&#43;M*log(M))(N是集合大小，M
 为返回元素的数量)，有时会安排到slave上执行。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/key/expire.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Expire</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/key/expireat.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ExpireAt</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/key/persist.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Persist</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/key/ttl.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">TTL</a>，关于Key超时的操作。默认以秒为单位，也有p字头的以毫秒为单位的版本，
 Redis的内部实现见2.9 过期数据清除。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="22-string" href="https://github.com/springside/springside4/wiki/redis#22-string" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.2 String</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
最普通的key-value类型，说是String，其实是任意的byte[]，比如图片，最大512M。 所有常用命令的复杂度都是O(1)，普通的Get/Set方法，可以用来做Cache，存Session，为了简化架构甚至可以替换掉Memcached。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/incr.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Incr</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/incrby.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">IncrBy</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/incrbyfloat.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">IncrByFloat</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/decr.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Decr</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/decrby.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">DecrBy</a>，可以用来做计数器，做自增序列。key不存在时会创建并贴心的设原&#20540;为0。IncrByFloat专门针对float，没有对应的decrByFloat版本？用负数啊。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/setnx.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SetNx</a>， 仅当key不存在时才Set。可以用来选举Master或做分布式锁：所有Client不断尝试使用SetNx master
 myName抢注Master，成功的那位不断使用Expire刷新它的过期时间。如果Master倒掉了key就会失效，剩下的节点又会发生新一轮抢夺。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
其他Set指令：</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/string/setex.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SetEx</a>， Set &#43; Expire
 的简便写法，p字头版本以毫秒为单位。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/string/getset.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">GetSet</a>， 设置新&#20540;，返回旧&#20540;。比如一个按小时计算的计数器，可以用GetSet获取计数并重置为0。这种指令在服务端做起来是举手之劳，客户端便方便很多。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/string/mget.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">MGet</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/mset.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">MSet</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/msetnx.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">MSetNx</a>，
 一次get/set多个key。</li><li style="border:0px; margin:0px; padding:0px">2.6.12版开始，Set命令已融合了Set/SetNx/SetEx三者，SetNx与SetEx可能会被废弃。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/getbit.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">GetBit</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/Setbit.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SetBit</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/bitop.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">BitOp,与或非</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/bitcount.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">BitCount</a>，&nbsp;<a target="_blank" href="http://blog.getspool.com/2011/11/29/fast-easy-realtime-metrics-using-redis-bitmaps/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">BitMap的玩法</a>，比如统计今天的独立访问用户数时，每个注册用户都有一个offset，他今天进来的话就把他那个位设为1，用BitCount就可以得出今天的总人数。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/append.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Append</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/setrange.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SetRange</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/getrange.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">GetRange</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/string/strlen.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">StrLen</a>，对文本进行扩展、替换、截取和求长度，只对特定数据&#26684;式如字段定长的有用，json就没什么用。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="23-hash" href="https://github.com/springside/springside4/wiki/redis#23-hash" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.3 Hash</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Key-HashMap结构，相比String类型将这整个对象持久化成JSON&#26684;式，Hash将对象的各个属性存入Map里，可以只读取/更新对象的某些属性。这样有些属性超长就让它一边呆着不动，另外不同的模块可以只更新自己关心的属性而不会互相并发覆盖冲突。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
另一个用法是土法建索引。比如User对象，除了id有时还要按name来查询。可以有如下的数据记录:</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">(String) user:101 -&gt; {“id”:101,”name”:”calvin”…}</li><li style="border:0px; margin:0px; padding:0px">(String) user:102 -&gt; {“id”:102,”name”:”kevin”…}</li><li style="border:0px; margin:0px; padding:0px">(Hash) user:index-&gt; “calvin”-&gt;101, “kevin” -&gt; 102</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
底层实现是<a target="_blank" href="http://www.redisbook.com/en/latest/internal-datastruct/dict.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">hash table</a>，一般操作复杂度是O(1)，要同时操作多个field时就是O(N)，N是field的数量。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="24-list" href="https://github.com/springside/springside4/wiki/redis#24-list" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.4 List</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
List是一个<a target="_blank" href="http://www.redisbook.com/en/latest/internal-datastruct/adlist.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">双向链表</a>，支持双向的Pop/Push，江湖规矩一般从左端Push，右端Pop——<a target="_blank" href="http://redis.readthedocs.org/en/latest/list/lpush.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">LPush</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/list/rpop.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">RPop</a>，而且还有Blocking的版本<a target="_blank" href="http://redis.readthedocs.org/en/latest/list/blpop.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">BLPop</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/list/brpop.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">BRPop</a>，客户端可以阻塞在那直到有消息到来，所有操作都是O(1)的好孩子，可以当Message
 Queue来用。当多个Client并发阻塞等待，有消息入列时谁先被阻塞谁先被服务。任务队列系统<a target="_blank" href="http://github.com/defunkt/resque" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Resque</a>是其典型应用。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
还有<a target="_blank" href="http://redis.readthedocs.org/en/latest/list/rpoplpush.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">RPopLPush</a>/&nbsp;<a target="_blank" href="http://redis.readthedocs.org/en/latest/list/brpoplpush" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">BRPopLPush</a>，弹出来返回给client的同时，把自己又推入另一个list，<a target="_blank" href="http://redis.readthedocs.org/en/latest/list/llen.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">LLen</a>获取列表的长度。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
还有按&#20540;进行的操作：<a target="_blank" href="http://redis.readthedocs.org/en/latest/list/lrem.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">LRem</a>(按&#20540;删除元素)、<a target="_blank" href="http://redis.readthedocs.org/en/latest/list/linsert.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">LInsert</a>(插在某个&#20540;的元素的前后)，复杂度是O(N)，N是List长度，因为List的&#20540;不唯一，所以要遍历全部元素，而Set只要O(log(N))。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
按下标进行的操作：下标从0开始，队列从左到右算，下标为负数时则从右到左。</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/list/lset.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">LSet</a>&nbsp;，按下标设置元素&#20540;。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/list/lindex.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">LIndex</a>，按下标返回元素。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/list/lrange.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">LRange</a>，不同于POP直接弹走元素，只是返回列表内一段下标的元素，是分页的最爱。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/list/ltrim.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">LTrim</a>，限制List的大小，比如只保留最新的20条消息。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
复杂度也是O(N)，其中LSet的N是List长度，LIndex的N是下标的&#20540;，LRange的N是start的&#20540;&#43;列出元素的个数，因为是链表而不是数组，所以按下标访问其实要遍历链表，除非下标正好是队头和队尾。LTrim的N是移除元素的个数。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
在消息队列中，并没有JMS的ack机制，如果消费者把job给Pop走了又没处理完就死机了怎么办？</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">解决方法之一是加多一个sorted set，分发的时候同时发到list与sorted set，以分发时间为score，用户把job做完了之后要用ZREM消掉sorted set里的job，并且定时从sorted set中取出超时没有完成的任务，重新放回list。</li><li style="border:0px; margin:0px; padding:0px">另一个做法是为每个worker多加一个的list，弹出任务时改用RPopLPush，将job同时放到worker自己的list中，完成时用LREM消掉。如果集群管理(如zookeeper)发现worker已经挂掉，就将worker的list内容重新放回主list。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="25-set" href="https://github.com/springside/springside4/wiki/redis#25-set" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.5 Set</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Set就是Set，可以将重复的元素随便放入而Set会自动去重，底层实现也是<a target="_blank" href="http://www.redisbook.com/en/latest/internal-datastruct/dict.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">hash table</a>。</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/set/sadd.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SAdd</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/srem.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SRem</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/sismember.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SIsMember</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/scard.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SCard</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/smove.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SMove</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/smembers.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SMembers</a>，各种标准操作。除了SMembers都是O(1)。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/set/sinter.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SInter</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/sinterstore.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SInterStore</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/sunion.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SUnion</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/sunionstore.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SUnionStore</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/sdiff.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SDiff</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/set/sdiffstore.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">SDiffStore</a>，各种集合操作。交集运算可以用来显示在线好友(在线用户
 交集 好友列表)，共同关注(两个用户的关注列表的交集)。O(N)，并集和差集的N是集合大小之和，交集的N是小的那个集合的大小*2。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="26-sorted-set" href="https://github.com/springside/springside4/wiki/redis#26-sorted-set" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.6 Sorted Set</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
有序集，元素放入集合时还要提供该元素的分数。</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zrange.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZRange</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zrevrange.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZRevRange</a>，按排名的上下限返回元素，正数与倒数。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zrangebyscore.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZRangeByScore</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zrevrangebyscore.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZRevRangeByScore</a>，按分数的上下限返回元素，正数与倒数。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zremrangebyrank.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZRemRangeByRank</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zremrangebyscore.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZRemRangeByScore</a>，按排名/按分数的上下限删除元素。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zcount.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZCount</a>，统计分数上下限之间的元素个数。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zrank.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZRank</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zrevrank.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZRevRank</a>&nbsp;，显示某个元素的正倒序的排名。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zscore.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZScore</a>/<a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zincrby.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZIncrby</a>，显示元素的分数/增加元素的分数。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zadd.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZAdd</a>(Add)/<a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zrem.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZRem</a>(Remove)/<a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zcard.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZCard</a>(Count)，<a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zinterstore.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZInsertStore</a>(交集)/<a target="_blank" href="http://redis.readthedocs.org/en/latest/sorted_set/zunionstore.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ZUnionStore</a>(并集)，Set操作，与正牌Set相比，少了IsMember和差集运算。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Sorted Set的实现是hash table(element-&gt;score, 用于实现ZScore及判断element是否在集合内)，和skip list(score-&gt;element,按score排序)的混合体。&nbsp;<a target="_blank" href="http://www.redisbook.com/en/latest/internal-datastruct/skiplist.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">skip
 list</a>有点像平衡二叉树那样，不同范围的score被分成一层一层，每层是一个按score排序的链表。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
ZAdd/ZRem是O(log(N))，ZRangeByScore/ZRemRangeByScore是O(log(N)&#43;M)，N是Set大小，M是结果/操作元素的个数。可见，原本可能很大的N被很关键的Log了一下，1000万大小的Set，复杂度也只是几十不到。当然，如果一次命中很多元素M很大那谁也没办法了。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="27-%E4%BA%8B%E5%8A%A1" href="https://github.com/springside/springside4/wiki/redis#27-%E4%BA%8B%E5%8A%A1" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.7 事务</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
用<a target="_blank" href="http://redis.readthedocs.org/en/latest/transaction/multi.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Multi</a>(Start Transaction)、<a target="_blank" href="http://redis.readthedocs.org/en/latest/transaction/exec.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Exec</a>(Commit)、<a target="_blank" href="http://redis.readthedocs.org/en/latest/transaction/discard.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Discard</a>(Rollback)实现。
 在事务提交前，不会执行任何指令，只会把它们存到一个队列里，不影响其他客户端的操作。在事务提交时，批量执行所有指令。<a target="_blank" href="http://www.redisbook.com/en/latest/feature/transaction.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">《Redis设计与实现》中的详述</a>。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
注意，Redis里的事务，与我们平时的事务概念很不一样：</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">它仅仅是保证事务里的操作会被连续独占的执行。因为是单线程架构，在执行完事务内所有指令前是不可能再去同时执行其他客户端的请求的。</li><li style="border:0px; margin:0px; padding:0px">它没有隔离级别的概念，因为事务提交前任何指令都不会被实际执行，也就不存在”事务内的查询要看到事务里的更新，在事务外查询不能看到”这个让人万分头痛的问题。</li><li style="border:0px; margin:0px; padding:0px">它不保证原子性——所有指令同时成功或同时失败，只有决定是否开始执行全部指令的能力，没有执行到一半进行回滚的能力。在redis里失败分两种，一种是明显的指令错误，比如指令名拼错，指令参数个数不对，在2.6版中全部指令都不会执行。另一种是隐含的，比如在事务里，第一句是SET foo bar， 第二句是LLEN foo，对第一句产生的String类型的key执行LLEN会失败，但这种错误只有在指令运行后才能发现，这时候第一句成功，第二句失败。还有，如果事务执行到一半redis被KILL，已经执行的指令同样也不会被回滚。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://redis.readthedocs.org/en/latest/transaction/watch.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Watch</a>指令，类&#20284;乐观锁，事务提交时，如果Key的&#20540;已被别的客户端改变，比如某个list已被别的客户端push/pop过了，整个事务队列都不会被执行。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="28-lua-script" href="https://github.com/springside/springside4/wiki/redis#28-lua-script" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.8 Lua Script</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Redis2.6内置的<a target="_blank" href="http://redis.readthedocs.org/en/latest/script/eval.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Lua Script支持</a>，可以在Redis的Server端一次过运行大量逻辑，就像存储过程一样，避免了海量中间数据在网路上的传输。</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://www.lua.org/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Lua</a>自称是在Script语言里关于快的标准，Redis选择了它而不是流行的JavaScript。</li><li style="border:0px; margin:0px; padding:0px">因为Redis的单线程架构，整个Script默认是在一个事务里的。</li><li style="border:0px; margin:0px; padding:0px">Script里涉及的所有Key尽量用变量，从外面传入，使Redis一开始就知道你要改变哪些key。(but why?)</li><li style="border:0px; margin:0px; padding:0px">Eval每次传输一整段Script比较费带宽，可以先用<a target="_blank" href="http://redis.readthedocs.org/en/latest/script/script_load.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Script
 Load</a>载入script，返回哈希&#20540;。然后用<a target="_blank" href="http://redis.readthedocs.org/en/latest/script/evalsha.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">EvalHash</a>执行。因为就是SHA-1，所以任何时候执行返回的哈希&#20540;都是一样的。</li><li style="border:0px; margin:0px; padding:0px">内置的Lua库里还很贴心的带了CJSON，可以处理json字符串。</li><li style="border:0px; margin:0px; padding:0px">一段用Redis做Timer的示例代码，下面的script被定期调用，从以触发时间为score的sorted set中取出已到期的Job，放到list中给Client们blocking popup。</li></ul>
<div style="border:0px; margin:0px; padding:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<div id="highlighter_252433" class="syntaxhighlighter notranslate actionscript3" style="border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important">
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important">
<tbody style="border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
<tr style="border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
<td class="gutter" style="border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important">
<div class="line number1 index0 alt2" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
1</div>
<div class="line number2 index1 alt1" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
2</div>
<div class="line number3 index2 alt2" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
3</div>
<div class="line number4 index3 alt1" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
4</div>
<div class="line number5 index4 alt2" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
5</div>
<div class="line number6 index5 alt1" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
6</div>
<div class="line number7 index6 alt2" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
7</div>
<div class="line number8 index7 alt1" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
8</div>
<div class="line number9 index8 alt2" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
9</div>
<div class="line number10 index9 alt1" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
10</div>
<div class="line number11 index10 alt2" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
11</div>
<div class="line number12 index11 alt1" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
12</div>
<div class="line number13 index12 alt2" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
13</div>
<div class="line number14 index13 alt1" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
14</div>
<div class="line number15 index14 alt2" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
15</div>
<div class="line number16 index15 alt1" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
16</div>
</td>
<td class="code" style="width:585px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; min-height:inherit!important">
<div class="container" style="margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important">
<div class="line number1 index0 alt2" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">--
 KEYS: [</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">1</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">]job:sleeping,
 [</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">2</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">]job:ready</code></div>
<div class="line number2 index1 alt1" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">--
 ARGS: [</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">1</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">]currentTime</code></div>
<div class="line number3 index2 alt2" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">--
 Comments: result </code><code class="actionscript3 keyword" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-weight:bold!important; min-height:inherit!important; color:rgb(0,102,153)!important">is</code>
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
the&nbsp; job id</code></div>
<div class="line number4 index3 alt1" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">local
 jobs=redis.call(</code><code class="actionscript3 string" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important">'zrangebyscore'</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">,
 KEYS[</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">1</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">],
</code><code class="actionscript3 string" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important">'-inf'</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">,
 ARGV[</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">1</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">])</code></div>
<div class="line number5 index4 alt2" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">local
 count = table.maxn(jobs)</code></div>
<div class="line number6 index5 alt1" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
&nbsp;</div>
<div class="line number7 index6 alt2" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 keyword" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-weight:bold!important; min-height:inherit!important; color:rgb(0,102,153)!important">if</code>
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
count&gt;</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">0</code>&nbsp;
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
then</code></div>
<div class="line number8 index7 alt1" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 spaces" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">&nbsp;&nbsp;</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">--
 Comments: remove from Sleeping Job sorted </code><code class="actionscript3 keyword" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-weight:bold!important; min-height:inherit!important; color:rgb(0,102,153)!important">set</code></div>
<div class="line number9 index8 alt2" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 spaces" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">&nbsp;&nbsp;</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">redis.call(</code><code class="actionscript3 string" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important">'zremrangebyscore'</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">,
 KEYS[</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">1</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">],
</code><code class="actionscript3 string" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important">'-inf'</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">,
 ARGV[</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">1</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">])</code></div>
<div class="line number10 index9 alt1" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
&nbsp;</div>
<div class="line number11 index10 alt2" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 spaces" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">&nbsp;&nbsp;</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">--
 Comments: add to the Ready Job list</code></div>
<div class="line number12 index11 alt1" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 spaces" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">&nbsp;&nbsp;</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">--
 Comments: can optimize to </code><code class="actionscript3 keyword" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-weight:bold!important; min-height:inherit!important; color:rgb(0,102,153)!important">use</code>
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
lpush id1,id2,... </code><code class="actionscript3 keyword" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-weight:bold!important; min-height:inherit!important; color:rgb(0,102,153)!important">for</code>
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
better performance</code></div>
<div class="line number13 index12 alt2" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 spaces" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">&nbsp;&nbsp;</code><code class="actionscript3 keyword" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-weight:bold!important; min-height:inherit!important; color:rgb(0,102,153)!important">for</code>
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
i=</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">1</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">,count
</code><code class="actionscript3 keyword" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; font-weight:bold!important; min-height:inherit!important; color:rgb(0,102,153)!important">do</code></div>
<div class="line number14 index13 alt1" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 spaces" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">redis.call(</code><code class="actionscript3 string" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:blue!important">'lpush'</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">,
 KEYS[</code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">2</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">],
 jobs[i])</code></div>
<div class="line number15 index14 alt2" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 spaces" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">&nbsp;&nbsp;</code><code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">end</code></div>
<div class="line number16 index15 alt1" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">end</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<pre style="border:0px; margin-top:0px; margin-bottom:20px; padding:0px; font-size:14px; font-family:Monaco,Consolas,'Andale Mono','DejaVu Sans Mono',monospace; color:rgb(51,51,51); line-height:21px; background-color:rgb(255,255,255)"></pre>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
&nbsp;</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="29-%E8%BF%87%E6%9C%9F%E6%95%B0%E6%8D%AE%E6%B8%85%E9%99%A4" href="https://github.com/springside/springside4/wiki/redis#29-%E8%BF%87%E6%9C%9F%E6%95%B0%E6%8D%AE%E6%B8%85%E9%99%A4" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>2.9
 过期数据清除</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://redis.io/commands/expire" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">官方文档</a>&nbsp;与&nbsp;<a target="_blank" href="http://www.redisbook.com/en/latest/internal/db.html#id15" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">《Redis设计与实现》中的详述</a>，过期数据的清除从来不容易，为每一条key设置一个timer，到点立刻删除的消耗太大，每秒遍历所有数据消耗也大，Redis使用了一种相对务实的做法：
 当client主动访问key会先对key进行超时判断，过时的key会立刻删除。 如果clien永远都不再get那条key呢？ 它会在Master的后台，每秒10次的执行如下操作： 随机选取100个key校验是否过期，如果有25个以上的key过期了，立刻额外随机选取下100个key(不计算在10次之内)。可见，如果过期的key不多，它最多每秒回收200条左右，如果有超过25%的key过期了，它就会做得更多，但只要key不被主动get，它占用的内存什么时候最终被清理掉只有天知道。</p>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="3-%E6%80%A7%E8%83%BD" href="https://github.com/springside/springside4/wiki/redis#3-%E6%80%A7%E8%83%BD" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>3. 性能</h2>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
&nbsp;</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="31-%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C" href="https://github.com/springside/springside4/wiki/redis#31-%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>3.1
 测试结果</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<ul style="border:0px; margin:0px 0px 0px 20px; padding:0px; list-style-position:inside">
<li style="border:0px; margin:0px; padding:0px">测试环境： RHEL 6.3 / HP Gen8 Server/ 2 * Intel Xeon 2.00GHz(6 core) / 64G DDR3 memory / 300G RAID-1 SATA / 1 master(writ AOF), 1 slave(write AOF &amp; RDB)</li></ul>
</ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
&nbsp;</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">数据准备： 预加载两千万条数据，占用10G内存。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
&nbsp;</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
&nbsp;</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">测试工具：自带的redis-benchmark，默认只是基于一个很小的数据集进行测试，调整命令行参数如下，就可以开100条线程(默认50)，SET 1千万次(key在0-1千万间随机)，key长21字节，value长256字节的数据。
<div style="border:0px; margin:0px; padding:0px">
<div style="border:0px; margin:0px; padding:0px">
<div id="highlighter_985938" class="syntaxhighlighter notranslate actionscript3" style="border:0px; width:620px; margin:1em 0px!important; padding:1px!important; font-size:12px!important; position:relative!important; overflow-y:hidden!important; overflow-x:auto!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important">
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse:collapse; border-spacing:0px; width:620px; border:0px!important; margin:0px!important; padding:0px!important; font-size:12px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important">
<tbody style="border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
<tr style="border:0px!important; margin:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
<td class="gutter" style="border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; width:auto!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; min-height:inherit!important; color:rgb(175,175,175)!important">
<div class="line number1 index0 alt2" style="border-width:0px 3px 0px 0px!important; border-right-style:solid!important; border-right-color:rgb(108,226,108)!important; margin:0px!important; padding:0px 0.5em 0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; text-align:right!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
1</div>
</td>
<td class="code" style="width:592px; border:0px!important; margin:0px!important; padding:0px!important; vertical-align:baseline!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; min-height:inherit!important">
<div class="container" style="margin-left:-10px; width:640px; border:0px!important; margin-top:0px!important; margin-right:0px!important; margin-bottom:0px!important; padding:0px!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:relative!important; right:auto!important; top:auto!important; vertical-align:baseline!important; min-height:inherit!important">
<div class="line number1 index0 alt2" style="border:0px!important; margin:0px!important; padding:0px 1em!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; white-space:pre!important">
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">redis-benchmark
 -t SET -c </code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">100</code>
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
-n </code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">10000000</code>
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
-r </code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">10000000</code>
<code class="actionscript3 plain" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important">
-d </code><code class="actionscript3 value" style="border:0px!important; margin:0px!important; padding:0px!important; font-family:Consolas,'Bitstream Vera Sans Mono','Courier New',Courier,monospace!important; bottom:auto!important; float:none!important; height:auto!important; left:auto!important; line-height:1.1em!important; outline:0px!important; overflow:visible!important; position:static!important; right:auto!important; top:auto!important; vertical-align:baseline!important; width:auto!important; min-height:inherit!important; color:rgb(0,153,0)!important">256</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</li><li style="border:0px; margin:0px; padding:0px">测试结果(TPS)： 1.SET：4.5万， 2.GET：6万 ，3.INCR：6万，4.真实混合场景: 2.5万SET &amp; 3万GET</li><li style="border:0px; margin:0px; padding:0px">单条客户端线程时6千TPS，50与100条客户端线程差别不大，200条时会略多。</li><li style="border:0px; margin:0px; padding:0px">Get/Set操作，经过了LAN，延时也只有1毫秒左右，可以反复放心调用，不用像调用REST接口和访问数据库那样，每多一次外部访问都心痛。</li><li style="border:0px; margin:0px; padding:0px">资源监控:<br>
1.CPU: 占了一个处理器的100%，总CPU是4%(因为总共有2CPU*6核*超线程 = 24个处理器)，可见单线程下单处理器的能力是瓶颈。 AOF rewrite时另一个处理器占用50-70%。<br>
2.网卡：15-20 MB/s receive, 3Mb/s send(no slave) or 15-20 MB/s send (with slave) 。当把value长度加到4K时，receive 99MB/s，已经到达千兆网卡的瓶颈，TPS降到2万。<br>
3.硬盘：15MB/s(AOF append), 100MB/s(AOF rewrite/AOF load，普通硬盘的瓶颈)，</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
&nbsp;</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="32-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BF%AB" href="https://github.com/springside/springside4/wiki/redis#32-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BF%AB" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>3.2
 为什么快</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">纯ANSI C编写。</li><li style="border:0px; margin:0px; padding:0px">不依赖第三方类库，没有像memcached那样使用libevent，因为libevent迎合通用性而造成代码庞大，所以作者用libevent中两个文件修改实现了自己的epoll event loop。微软的兼容Windows补丁也因为同样原因被拒了。</li><li style="border:0px; margin:0px; padding:0px">快，原因之一是Redis多样的数据结构，每种结构只做自己爱做的事，当然比数据库只有Table，MongogoDB只有JSON一种结构快了。</li><li style="border:0px; margin:0px; padding:0px">可惜单线程架构，虽然作者认为CPU不是瓶颈，内存与网络带宽才是。但实际测试时并非如此，见上。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="33-%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98" href="https://github.com/springside/springside4/wiki/redis#33-%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>3.3
 性能调优</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://www.redis.io/topics/latency" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">官方文档关于各种产生Latency的原因的详细分析</a>,&nbsp;<a target="_blank" href="http://www.oschina.net/translate/redis-latency-problems-troubleshooting" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">中文版</a></li><li style="border:0px; margin:0px; padding:0px">正视网络往返时间：<br>
1.MSet/LPush/ZAdd等都支持一次输入多个Key。<br>
2.<a target="_blank" href="http://www.redis.io/topics/pipelining" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">PipeLining模式</a>&nbsp;可以一次输入多个指令。<br>
3.更快的是Lua Script模式，还可以包含逻辑，直接在服务端又get又set的，见2.8 Lua Script。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.readthedocs.org/en/latest/server/slowlog.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">发现执行缓慢的命令</a>，可配置执行超过多少时间的指令算是缓慢指令(默认10毫秒，不含IO时间)，可以用slowlog
 get 指令查看(默认只保留最后的128条)。单线程的模型下，一个请求占掉10毫秒是件大事情，注意设置和显示的单位为微秒。</li><li style="border:0px; margin:0px; padding:0px">CPU永远是瓶颈，但top看到单个CPU 100%时，就是垂直扩展的时候了。</li><li style="border:0px; margin:0px; padding:0px">持久化对性能的影响很大，见5.1持久化。</li><li style="border:0px; margin:0px; padding:0px">要熟悉各指令的复杂度，不过只要不是O(N)一个超大集合，都不用太担心。</li></ul>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="4-%E5%AE%B9%E9%87%8F" href="https://github.com/springside/springside4/wiki/redis#4-%E5%AE%B9%E9%87%8F" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>4. 容量</h2>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="41-%E6%9C%80%E5%A4%A7%E5%86%85%E5%AD%98" href="https://github.com/springside/springside4/wiki/redis#41-%E6%9C%80%E5%A4%A7%E5%86%85%E5%AD%98" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>4.1
 最大内存</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">所有的数据都必须在内存中，原来2.0版的VM策略(将Value放到磁盘，Key仍然放在内存)，2.4版后嫌麻烦又不支持了。</li><li style="border:0px; margin:0px; padding:0px">一定要设置最大内存，否则物理内存用爆了就会大量使用Swap，写RDB文件时的速度慢得你想死。</li><li style="border:0px; margin:0px; padding:0px">多留一倍内存是最安全的。重写AOF文件和RDB文件的进程(即使不做持久化，复制到Slave的时候也要写RDB)会fork出一条新进程来，采用了操作系统的Copy-On-Write策略(子进程与父进程共享Page。如果父进程的Page-每页4K有修改，父进程自己创建那个Page的副本，不会影响到子进程，父爱如山)。留意Console打出来的报告，如”RDB: 1215 MB of memory used by copy-on-write”。在系统极度繁忙时，如果父进程的所有Page在子进程写RDB过程中都被修改过了，就需要两倍内存。</li><li style="border:0px; margin:0px; padding:0px">按照Redis启动时的提醒，设置 vm.overcommit_memory = 1 ，使得fork()一条10G的进程时，因为COW策略而不一定需要有10G的free memory。</li><li style="border:0px; margin:0px; padding:0px">其他需要考虑的内存包括：<br>
1.AOF rewrite过程中对新写入命令的缓存(rewrite结束后会merge到新的aof文件)，留意”Background AOF buffer size: 80 MB”的字样。<br>
2.负责与Slave同步的Client的缓存，默认设置master需要为每个slave预留不高于256M的缓存(见5.1持久化)。</li><li style="border:0px; margin:0px; padding:0px">当最大内存到达时，按照配置的Policy进行处理， 默认策略为volatile-lru，对设置了expire time的key进行LRU清除(不是按实际expire time)。如果沒有数据设置了expire time或者policy为noeviction，则直接报错，但此时系统仍支持get之类的读操作。 另外还有几种policy，比如volatile-ttl按最接近expire time的，allkeys-lru对所有key都做LRU。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="42-%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8" href="https://github.com/springside/springside4/wiki/redis#42-%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>4.2
 内存占用</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">测试表明，string类型需要90字节的额外代价，就是说key 1个字节，value 1个字节时，还是需要占用92字节的长度，而上面的benchmark的记录就占用了367个字节。其他类型可根据文档自行计算或实际测试一下。</li><li style="border:0px; margin:0px; padding:0px">使用jemalloc分配内存，删除数据后，内存并不会乖乖还给操作系统而是被Redis截留下来重用到新的数据上，直到Redis重启。因此进程实际占用内存是看INFO里返回的used_memory_peak_human。</li><li style="border:0px; margin:0px; padding:0px">Redis内部用了<a target="_blank" href="http://www.redisbook.com/en/latest/compress-datastruct/ziplist.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">ziplist</a>/<a target="_blank" href="http://www.redisbook.com/en/latest/compress-datastruct/intset.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">intset</a>这样的压缩结构来减少hash/list/set/zset的存储，默认当集合的元素少于512个且最长那个&#20540;不超过64字节时使用，可配置。</li><li style="border:0px; margin:0px; padding:0px">用make 32bit可以编译出32位的版本，每个指针占用的内存更小，但只支持最大4GB内存。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="44-%E6%B0%B4%E5%B9%B3%E5%88%86%E5%8C%BAsharding" href="https://github.com/springside/springside4/wiki/redis#44-%E6%B0%B4%E5%B9%B3%E5%88%86%E5%8C%BAsharding" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>4.4
 水平分区，Sharding</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">其实，大内存加上垂直分区也够了，不一定非要沙丁一把。</li><li style="border:0px; margin:0px; padding:0px">Jedis支持在客户端做分区，局限是不能动态re-sharding， 有分区的master倒了，不能减少分区必须用slave顶上。要增加分区的话，呃…..</li><li style="border:0px; margin:0px; padding:0px">antire在博客里提到了<a target="_blank" href="http://www.antirez.com/news/44" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Twemproxy</a>，一个Twitter写的Proxy，但它在发现节点倒掉后，只会重新计算一致性哈希环，把数据存到别的master去，而不是集成Sentinel指向新由slave升级的master，像Memcached一样的做法也只适合做Cache的场景。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Redis-Cluster是今年工作重点，支持automatic re-sharding， 采用和Hazelcast类&#20284;的算法，总共有N个分区(eg.N=1024)，每台Server负责若干个分区。</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">在客户端先hash出key 属于哪个分区，随便发给一台server，server会告诉它真正哪个Server负责这个分区，缓存下来，下次还有该分区的请求就直接发到地儿了。</li><li style="border:0px; margin:0px; padding:0px">Re-sharding时，会将某些分区的数据移到新的Server上，完成后各Server周知分区&lt;-&gt;Server映射的变化，因为分区数量有限，所以通讯量不大。 在迁移过程中，客户端缓存的依然是旧的分区映射信息，原server对于已经迁移走的数据的get请求，会返回一个临时转向的应答，客户端先不会更新Cache。等迁移完成了，就会像前面那样返回一条永久转向信息，客户端更新Cache，以后就都去新server了。</li></ul>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="5-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7" href="https://github.com/springside/springside4/wiki/redis#5-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>5.
 高可用性</h2>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
高可用性关乎系统出错时到底会丢失多少数据，多久不能服务。要综合考虑持久化，Master-Slave复制及Fail-Over配置，以及具体Crash情形，比如Master死了，但Slave没死。或者只是Redis死了，操作系统没死等等。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="51-%E6%8C%81%E4%B9%85%E5%8C%96" href="https://github.com/springside/springside4/wiki/redis#51-%E6%8C%81%E4%B9%85%E5%8C%96" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>5.1 持久化</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">综述：&nbsp;<a target="_blank" href="http://blog.nosqlfan.com/html/3813.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">解密Redis持久化(中文概括版)</a>,&nbsp;<a target="_blank" href="http://redis.io/topics/persistence" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">英文原版</a>，《Redis设计与实现》：&nbsp;<a target="_blank" href="http://www.redisbook.com/en/latest/internal/rdb.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">RDB</a>&nbsp;与&nbsp;<a target="_blank" href="http://www.redisbook.com/en/latest/internal/aof.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">AOF</a>。</li><li style="border:0px; margin:0px; padding:0px">很多人开始会想象两者是互相结合的，即dump出一个snapshot到RDB文件，然后在此基础上记录变化日志到AOF文件。实际上两者毫无关系，完全独立运行，因为作者认为简单才不会出错。如果使用了AOF，重启时只会从AOF文件载入数据，不会再管RDB文件。</li><li style="border:0px; margin:0px; padding:0px">正确关闭服务器：redis-cli shutdown 或者 kill，都会graceful shutdown，保证写RDB文件以及将AOF文件fsync到磁盘，不会丢失数据。 如果是粗暴的Ctrl&#43;C，或者kill -9 就可能丢失。</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="511-rdb%E6%96%87%E4%BB%B6" href="https://github.com/springside/springside4/wiki/redis#511-rdb%E6%96%87%E4%BB%B6" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.1.1
 RDB文件</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">RDB是整个内存的压缩过的Snapshot，<a target="_blank" href="http://blog.nosqlfan.com/html/3734.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">RDB的数据结构</a>，可以配置复合的快照触发条件，默认是1分钟内改了1万次，或5分钟内改了10次，或15分钟内改了1次。</li><li style="border:0px; margin:0px; padding:0px">RDB写入时，会连内存一起Fork出一个新进程，遍历新进程内存中的数据写文件，这样就解决了些Snapshot过程中又有新的写入请求进来的问题。 Fork的细节见4.1最大内存。</li><li style="border:0px; margin:0px; padding:0px">RDB会先写到临时文件，完了再Rename成，这样外部程序对RDB文件的备份和传输过程是安全的。而且即使写新快照的过程中Server被强制关掉了，旧的RDB文件还在。</li><li style="border:0px; margin:0px; padding:0px">可配置是否进行压缩，压缩方法是字符串的LZF算法，以及将string形式的数字变回int形式存储。</li><li style="border:0px; margin:0px; padding:0px">动态所有停止RDB保存规则的方法：redis-cli config set save “”</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="512-aof%E6%96%87%E4%BB%B6" href="https://github.com/springside/springside4/wiki/redis#512-aof%E6%96%87%E4%BB%B6" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.1.2
 AOF文件</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">操作日志，记录所有有效的写操作，等于mysql的binlog，&#26684;式就是明文的<a target="_blank" href="http://redis.io/topics/protocol" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis协议</a>的纯文本文件。</li><li style="border:0px; margin:0px; padding:0px">一般配置成每秒调用一次fdatasync将kernel的文件缓存刷到磁盘。当操作系统非正常关机时，文件可能会丢失不超过2秒的数据(更严谨的定义见后)。 如果设为fsync always，性能只剩几百TPS，不用考虑。如果设为no，靠操作系统自己的sync，Linux系统一般30秒一次。</li><li style="border:0px; margin:0px; padding:0px">AOF文件持续增长而过大时，会fork出一条新进程来将文件重写(也是先写临时文件，最后再rename，)， 遍历新进程的内存中数据，每条记录有一条的Set语句。默认配置是当AOF文件大小是上次rewrite后大小的一倍，且文件大于64M时触发。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.io/topics/protocol" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis协议</a>，如set mykey hello， 将持久化成*3 $3 set $5
 mykey $5 hello， 第一个数字代表这条语句有多少元，其他的数字代表后面字符串的长度。这样的设计，使得即使在写文件过程中突然关机导致文件不完整，也能自我修复，执行redis-check-aof即可。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
综上所述，RDB的数据不实时，同时使用两者时服务器重启也只会找AOF文件。那要不要只使用AOF呢？作者建议不要，因为RDB更适合用于备份数据库(AOF在不断变化不好备份)，快速重启，而且不会有AOF可能潜在的bug，留着作为一个万一的手段。</p>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="513-%E8%AF%BB%E5%86%99%E6%80%A7%E8%83%BD" href="https://github.com/springside/springside4/wiki/redis#513-%E8%AF%BB%E5%86%99%E6%80%A7%E8%83%BD" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.1.3
 读写性能</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">AOF重写和RDB写入都是在fork出新进程后，遍历新进程的内存顺序写的，既不阻塞主进程继续处理客户端请求，顺序写的速度也比随机写快。</li><li style="border:0px; margin:0px; padding:0px">测试把刚才benchmark的11G数据写成一个1.3的RDB文件，或者等大的AOF文件rewrite，需要80秒，在redis-cli info中可查看。启动时载入一个AOF或RDB文件的速度与上面写入时相同，在log中可查看。</li><li style="border:0px; margin:0px; padding:0px">Fork一个使用了大量内存的进程也要时间，大约10ms per GB的样子，但Xen在EC2上是让人郁闷的239ms (KVM和VMWare貌&#20284;没有这个毛病)，<a target="_blank" href="http://blog.nosqlfan.com/html/3903.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">各种系统的对比</a>，Info指令里的latest_fork_usec显示上次花费的时间。</li><li style="border:0px; margin:0px; padding:0px">在bgrewriteaof过程中，所有新来的写入请求依然会被写入旧的AOF文件，同时放到buffer中，当rewrite完成后，会在主线程把这部分内容合并到临时文件中之后才rename成新的AOF文件，所以rewrite过程中会不断打印”Background AOF buffer size: 80 MB， Background AOF buffer size: 180 MB”，计算系统容量时要留意这部分的内存消耗。注意，这个合并的过程是阻塞的，如果你产生了280MB的buffer，在100MB/s的传统硬盘上，Redis就要阻塞2.8秒！！！</li><li style="border:0px; margin:0px; padding:0px">NFS或者Amazon上的EBS都不推荐，因为它们也要消耗带宽。</li><li style="border:0px; margin:0px; padding:0px">bgsave和bgaofrewrite不会被同时执行，如果bgsave正在执行，bgaofrewrite会自动延后。</li><li style="border:0px; margin:0px; padding:0px">2.4版以后，写入AOF时的fdatasync由另一条线程来执行，不会再阻塞主线程。</li><li style="border:0px; margin:0px; padding:0px">2.4版以后，lpush/zadd可以输入一次多个&#20540;了，使得AOF重写时可以将旧版本中的多个lpush/zadd指令合成一个，每64个key串一串。</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="514-%E6%80%A7%E8%83%BD%E8%B0%83%E6%95%B4" href="https://github.com/springside/springside4/wiki/redis#514-%E6%80%A7%E8%83%BD%E8%B0%83%E6%95%B4" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.1.4
 性能调整</span></h4>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
因为RDB文件只用作后备用途，建议只在Slave上持久化RDB文件，而且只要15分钟备份一次就够了，只保留save 900 1这条规则。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
如果Enalbe AOF，好处是在最恶劣情况下也只会丢失不超过两秒数据，启动脚本较简单只load自己的AOF文件就可以了。代价一是带来了持续的IO，二是AOF rewrite的最后将rewrite过程中产生的新数据写到新文件造成的阻塞几乎是不可避免的。只要硬盘许可，应该尽量减少AOF rewrite的频率，AOF重写的基础大小默认&#20540;64M太小了，可以设到5G以上。默认超过原大小100%大小时重写可以改到适当的数&#20540;，比如之前的benchmark每个小时会产生40G大小的AOF文件，如果硬盘能撑到半夜系统闲时才用cron调度bgaofrewrite就好了。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
如果不Enable AOF ，仅靠Master-Slave Replication 实现高可用性也可以。能省掉一大笔IO也减少了rewrite时带来的系统波动。代价是如果Master/Slave同时倒掉，会丢失十几分钟的数据，启动脚本也要比较两个Master/Slave中的RDB文件，载入较新的那个。新浪微博就选用了这种架构，见<a target="_blank" href="http://timyang.net/data/redis-misunderstanding/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Tim的博客</a></p>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="515-trouble-shooting--enable-aof%E5%8F%AF%E8%83%BD%E5%AF%BC%E8%87%B4%E6%95%B4%E4%B8%AAredis%E8%A2%ABblock%E4%BD%8F%E5%9C%A82612%E7%89%88%E4%B9%8B%E5%89%8D" href="https://github.com/springside/springside4/wiki/redis#515-trouble-shooting--enable-aof%E5%8F%AF%E8%83%BD%E5%AF%BC%E8%87%B4%E6%95%B4%E4%B8%AAredis%E8%A2%ABblock%E4%BD%8F%E5%9C%A82612%E7%89%88%E4%B9%8B%E5%89%8D" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.1.5
 Trouble Shooting —— Enable AOF可能导致整个Redis被Block住，在2.6.12版之前</span></h4>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
现象描述：当AOF rewrite 15G大小的内存时，Redis整个死掉的样子，所有指令甚至包括slave发到master的ping，redis-cli info都不能被执行。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<span style="border:0px; margin:0px; padding:0px">原因分析：</span></p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://www.redis.io/topics/latency" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">官方文档，由IO产生的Latency详细分析</a>, 已经预言了悲剧的发生，但一开始没留意。</li><li style="border:0px; margin:0px; padding:0px">Redis为求简单，采用了单请求处理线程结构。</li><li style="border:0px; margin:0px; padding:0px">打开AOF持久化功能后， Redis处理完每个事件后会调用write(2)将变化写入kernel的buffer，如果此时write(2)被阻塞，Redis就不能处理下一个事件。</li><li style="border:0px; margin:0px; padding:0px">Linux规定执行write(2)时，如果对同一个文件正在执行fdatasync(2)将kernel buffer写入物理磁盘，或者有system wide sync在执行，write(2)会被block住，整个Redis被block住。</li><li style="border:0px; margin:0px; padding:0px">如果系统IO繁忙，比如有别的应用在写盘，或者Redis自己在AOF rewrite或RDB snapshot(虽然此时写入的是另一个临时文件，虽然各自都在连续写，但两个文件间的切换使得磁盘磁头的寻道时间加长），就可能导致fdatasync(2)迟迟未能完成从而block住write(2)，block住整个Redis。</li><li style="border:0px; margin:0px; padding:0px">为了更清晰的看到fdatasync(2)的执行时长，可以使用”strace -p (pid of redis server) -T -e -f trace=fdatasync”，但会影响系统性能。</li><li style="border:0px; margin:0px; padding:0px">Redis提供了一个自救的方式，当发现文件有在执行fdatasync(2)时，就先不调用write(2)，只存在cache里，免得被block。但如果已经超过两秒都还是这个样子，则会硬着头皮执行write(2)，即使redis会被block住。此时那句要命的log会打印：“Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF
 buffer without waiting for fsync to complete, this may slow down Redis.” 之后用redis-cli INFO可以看到aof_delayed_fsync的&#20540;被加1。</li><li style="border:0px; margin:0px; padding:0px">因此，对于fsync设为everysec时丢失数据的可能性的最严谨说法是：如果有fdatasync在长时间的执行，此时redis意外关闭会造成文件里不多于两秒的数据丢失。如果fdatasync运行正常，redis意外关闭没有影响，只有当操作系统crash时才会造成少于1秒的数据丢失。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<span style="border:0px; margin:0px; padding:0px">解决方法：</span><br>
最后发现，原来是AOF rewrite时一直埋头的调用write(2)，由系统自己去触发sync。在RedHat Enterprise 6里，默认配置vm.dirty_background_ratio=10，也就是占用了10%的可用内存才会开始后台flush，而我的服务器有64G内存。很明显一次flush太多数据会造成阻塞，所以最后果断设置了sysctl vm.dirty_bytes=33554432(32M)，问题解决。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
然后提了个issue，<a target="_blank" href="https://github.com/antirez/redis/issues/1019" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">AOF rewrite时定时也执行一下fdatasync嘛</a>， antirez三分钟后就回复了，新版中，AOF rewrite时32M就会重写主动调用fdatasync。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="52-master-slave%E5%A4%8D%E5%88%B6" href="https://github.com/springside/springside4/wiki/redis#52-master-slave%E5%A4%8D%E5%88%B6" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>5.2 Master-Slave复制</h3>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="521-%E6%A6%82%E8%BF%B0" href="https://github.com/springside/springside4/wiki/redis#521-%E6%A6%82%E8%BF%B0" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.2.1
 概述</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">slave可以在配置文件、启动命令行参数、以及redis-cli执行SlaveOf指令来设置自己是奴隶。</li><li style="border:0px; margin:0px; padding:0px">测试表明同步延时非常小，指令一旦执行完毕就会立刻写AOF文件和向Slave转发，除非Slave自己被阻塞住了。</li><li style="border:0px; margin:0px; padding:0px">比较蠢的是，即使在配置文件里设了slavof，slave启动时依然会先从数据文件载入一堆没用的数据，再去执行slaveof。</li><li style="border:0px; margin:0px; padding:0px">“Slaveof no one”，立马变身master。</li><li style="border:0px; margin:0px; padding:0px">2.8版本将支持<a target="_blank" href="http://www.antirez.com/news/47" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">PSYNC部分同步</a>，master会拨出一小段内存来存放要发给slave的指令，如果slave短暂的断开了，重连时会从内存中读取需要补读的指令，这样就不需要断开两秒也搞一次全同步了。但如果断开时间较长，已经超过了内存中保存的数据，就还是要全同步。</li><li style="border:0px; margin:0px; padding:0px">Slave也可以接收Read-Only的请求。</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="522-slaveof%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E5%AE%8C%E5%85%A8%E9%87%8D%E7%94%A8%E5%B7%B2%E6%9C%89%E5%8A%9F%E8%83%BD%E9%9D%9E%E5%B8%B8%E7%BB%8F%E6%B5%8E" href="https://github.com/springside/springside4/wiki/redis#522-slaveof%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E5%AE%8C%E5%85%A8%E9%87%8D%E7%94%A8%E5%B7%B2%E6%9C%89%E5%8A%9F%E8%83%BD%E9%9D%9E%E5%B8%B8%E7%BB%8F%E6%B5%8E" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.2.2
 slaveof执行过程，完全重用已有功能，非常经济</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">先执行一次全同步 — 请求master BgSave出自己的一个RDB Snapshot文件发给slave，slave接收完毕后，清除掉自己的旧数据，然后将RDB载入内存。</li><li style="border:0px; margin:0px; padding:0px">再进行增量同步 — master作为一个普通的client连入slave，将所有写操作转发给slave，没有特殊的同步协议。</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="523-trouble-shooting-again" href="https://github.com/springside/springside4/wiki/redis#523-trouble-shooting-again" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.2.3
 Trouble Shooting again</span></h4>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
有时候明明master/slave都活得好好的，突然间就说要重新进行全同步了：</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
1.Slave显示：# MASTER time out: no data nor PING received…</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
slave会每隔repl-ping-slave-period(默认10秒)ping一次master，如果超过repl-timeout(默认60秒)都没有收到响应，就会认为Master挂了。如果Master明明没挂但被阻塞住了也会报这个错。可以适当调大repl-timeout。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
2.Master显示：# Client addr=10.175.162.123:44670 flags=S oll=104654 omem=2147487792 events=rw cmd=sync scheduled to be closed ASAP for overcoming of output buffer limits.</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
当slave没挂但被阻塞住了，比如正在loading Master发过来的RDB， Master的指令不能立刻发送给slave，就会放在output buffer中(见oll是命令数量，omem是大小)，在配置文件中有如下配置：client-output-buffer-limit slave 256mb 64mb 60， 这是说负责发数据给slave的client，如果buffer超过256m或者连续60秒超过64m，就会被立刻强行关闭！！！ Traffic大的话一定要设大一点。否则就会出现一个很悲剧的循环，Master传输一个大的RDB给Slave，Slave努力的装载，但还没装载完，Master对client的缓存满了，再来一次。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
平时可以在master执行&nbsp;<a target="_blank" href="http://redis.io/commands/client-list" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">redis-cli client list</a>&nbsp;找那个cmd=sync，flag=S的client，注意OMem的变化。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="53-fail-over" href="https://github.com/springside/springside4/wiki/redis#53-fail-over" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>5.3 Fail-Over</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Redis-sentinel是2.6版开始加入的另一组独立运行的节点，提供自动Fail Over的支持。</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://redis.io/topics/sentinel" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">官方文档</a>&nbsp;与&nbsp;<a target="_blank" href="http://www.wzxue.com/redis%E6%A0%B8%E5%BF%83%E8%A7%A3%E8%AF%BB-%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7redis-sentinel/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis核心解读–集群管理工具(Redis-sentinel)</a></li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://www.antirez.com/news/55" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">antirez 对 Sentinel的反驳</a>，与<a target="_blank" href="http://www.antirez.com/news/56" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">下篇</a></li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="531-%E4%B8%BB%E8%A6%81%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B" href="https://github.com/springside/springside4/wiki/redis#531-%E4%B8%BB%E8%A6%81%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.3.1
 主要执行过程</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">Sentinel每秒钟对所有master，slave和其他sentinel执行Ping，redis-server节点要应答&#43;PONG或-LOADING或-MASTERDOWN.</li><li style="border:0px; margin:0px; padding:0px">如果某一台Sentinel没有在30秒内(可配置得短一些哦)收到上述正确应答，它就会认为master处于sdown状态(主观Down)</li><li style="border:0px; margin:0px; padding:0px">它向其他sentinel询问是否也认为该master倒了（SENTINEL is-master-down-by-addr ）， 如果quonum台(默认是2)sentinel在5秒钟内都这样认为，就会认为master真是odown了(客观Down)。</li><li style="border:0px; margin:0px; padding:0px">此时会选出一台sentinel作为Leader执行fail-over, Leader会从slave中选出一个提升为master(执行slaveof no one)，然后让其他slave指向它(执行slaveof new master)。</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="532-masterslave-%E5%8F%8A-%E5%85%B6%E4%BB%96sentinel%E7%9A%84%E5%8F%91%E7%8E%B0" href="https://github.com/springside/springside4/wiki/redis#532-masterslave-%E5%8F%8A-%E5%85%B6%E4%BB%96sentinel%E7%9A%84%E5%8F%91%E7%8E%B0" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.3.2
 master/slave 及 其他sentinel的发现</span></h4>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
master地址在sentinel.conf里, sentinel会每10秒一次向master发送INFO，知道master的slave有哪些。 如果master已经变为slave，sentinel会分析INFO的应答指向新的master。以前，sentinel重启时，如果master已经切换过了，但sentinel.conf里master的地址并没有变，很可能有悲剧发生。另外master重启后如果没有切换成slave，也可能有悲剧发生。新版好像修复了一点这个问题，待研究。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
另外，sentinel会在master上建一个pub/sub channel，名为”sentinel:hello”，通告各种信息，sentinel们也是通过接收pub/sub channel上的&#43;sentinel的信息发现彼此，因为每台sentinel每5秒会发送一次自己的host信息，宣告自己的存在。</p>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="533-%E8%87%AA%E5%AE%9A%E4%B9%89reconfig%E8%84%9A%E6%9C%AC" href="https://github.com/springside/springside4/wiki/redis#533-%E8%87%AA%E5%AE%9A%E4%B9%89reconfig%E8%84%9A%E6%9C%AC" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">5.3.3
 自定义reconfig脚本</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">sentinel在failover时还会执行配置文件里指定的用户自定义reconfig脚本，做用户自己想做的事情，比如让master变为slave并指向新的master。</li><li style="border:0px; margin:0px; padding:0px">脚本的将会在命令行按顺序传入如下参数： &lt;master-name&gt; &lt;role(leader/observer)&gt; &lt;state(上述三种情况)&gt; &lt;from-ip&gt; &lt;from-port&gt; &lt;to-ip&gt; &lt;to-port&gt;</li><li style="border:0px; margin:0px; padding:0px">脚本返回0是正常，如果返回1会被重新执行，如果返回2或以上不会。 如果超过60秒没返回会被强制终止。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
觉得Sentinel至少有两个可提升的地方:</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">一是如果master 主动shutdown，比如系统升级，有办法主动通知sentinel提升新的master，减少服务中断时间。</li><li style="border:0px; margin:0px; padding:0px">二是比起redis-server太原始了，要自己丑陋的以nohup sentinel &gt; logfile 2&gt;&amp;1 &amp; 启动，也不支持shutdown命令，要自己kill pid。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="54-client%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7" href="https://github.com/springside/springside4/wiki/redis#54-client%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>5.4
 Client的高可用性</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
基于Sentinel的方案，client需要执行语句SENTINEL get-master-addr-by-name mymaster 可获得当前master的地址。 Jedis正在集成sentinel，已经支持了sentinel的一些指令，但还没发布，但sentinel版的连接池则暂时完全没有，在公司的项目里我参考<a target="_blank" href="https://github.com/hamsterready/jedis-sentinel-pool" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">网友的项目</a>自己写了一个。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="https://github.com/taobao/tedis" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">淘宝的Tedis driver</a>，使用了完全不同的思路，不基于Sentinel，而是多写随机读， 一开始就同步写入到所有节点，读的话随便读一个还活着的节点就行了。但有些节点成功有些节点失败如何处理?
 节点死掉重新起来后怎么重新同步?什么时候可以重新Ready? 所以不是很敢用。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
另外如Ruby写的<a target="_blank" href="https://github.com/ryanlecompte/redis_failover" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">redis_failover</a>，也是抛开了Redis Sentinel，基于ZooKeeper的临时方案。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Redis作者也在博客里抱怨<a target="_blank" href="http://www.antirez.com/news/33" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">怎么没有人做Dynamo-style 的client</a>。</p>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="6-%E8%BF%90%E7%BB%B4" href="https://github.com/springside/springside4/wiki/redis#6-%E8%BF%90%E7%BB%B4" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>6. 运维</h2>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="61-%E5%AE%89%E8%A3%85" href="https://github.com/springside/springside4/wiki/redis#61-%E5%AE%89%E8%A3%85" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>6.1 安装</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">安装包制作：没有现成，需要自己编译，自己写rpm包的脚本，可参考utils中的install_server.sh与redis_init_script。<br>
但RHEL下设定script runlevel的方式不一样，redis_init_script中要增加一句 “# chkconfig: 345 90 10″ ，而install_server.sh可以删掉后面的那句“chkconfig –level 345 reis”</li><li style="border:0px; margin:0px; padding:0px">云服务：<a target="_blank" href="http://redis-cloud.com/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis Cloud</a>，在Amazon、Heroku、Windows Azure、App Frog上提供云服务，供同样部署在这些云上的应用使用。其他的云服务有<a target="_blank" href="http://garantiadata.com/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">GarantiaData</a>，已被redis-cloud收购。另外还有<a target="_blank" href="http://redistogo.com/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis
 To Go</a>,&nbsp;<a target="_blank" href="https://openredis.com/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">OpenRedis</a>,&nbsp;<a target="_blank" href="http://www.redisgreen.net/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">RedisGreen</a>。</li><li style="border:0px; margin:0px; padding:0px">CopperEgg统计自己的用户在AWS上的数据库部署：mysqld占了50%半壁江山, redis占了18%排第二, mongodb也有11%, cassandra是3%，Oracle只有可怜的2%。</li><li style="border:0px; margin:0px; padding:0px">Chef Recipes：<a target="_blank" href="https://github.com/brianbianco/redisio" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">brianbianco/redisio</a>，活跃，同步更新版本。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="62-%E9%83%A8%E7%BD%B2%E6%A8%A1%E5%9E%8B" href="https://github.com/springside/springside4/wiki/redis#62-%E9%83%A8%E7%BD%B2%E6%A8%A1%E5%9E%8B" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>6.2
 部署模型</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">Redis只能使用单线程，为了提高CPU利用率，有提议在同一台服务器上启动多个Redis实例，但这会带来严重的IO争用，除非Redis不需要持久化，或者有某种方式保证多个实例不会在同一个时间重写AOF。</li><li style="border:0px; margin:0px; padding:0px">一组sentinel能同时监控多个Master。</li><li style="border:0px; margin:0px; padding:0px">有提议说环形的slave结构，即master只连一个slave，然后slave再连slave，此部署有两个前提，一是有大量的只读需求需要在slave完成，二是对slave传递时的数据不一致性不敏感。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="63-%E9%85%8D%E7%BD%AE" href="https://github.com/springside/springside4/wiki/redis#63-%E9%85%8D%E7%BD%AE" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>6.3 配置</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
约30个配置项，全都有默认配置，对redif.conf默认配置的修改见附录1。</p>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="631-%E4%B8%89%E6%9D%A1%E8%B7%AF" href="https://github.com/springside/springside4/wiki/redis#631-%E4%B8%89%E6%9D%A1%E8%B7%AF" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">6.3.1
 三条路</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">可以配置文件中编写。</li><li style="border:0px; margin:0px; padding:0px">可以在启动时的命令行配置，redis-server –port 7777 –slaveof 127.0.0.1 8888。</li><li style="border:0px; margin:0px; padding:0px">云时代大规模部署，把配置文件满街传显然不是好的做法， 可以用redis-cli执行<a target="_blank" href="http://redis.readthedocs.org/en/latest/server/config_set.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Config
 Set</a>指令， 修改所有的参数，达到维护人员最爱的不重启服务而修改参数的效果，而且在新版本里还可以执行&nbsp;<a target="_blank" href="http://antirez.com/news/54" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Config Rewrite</a>&nbsp;将改动写回到文件中，不过全部默认&#20540;都会打印出来，可能会破坏掉原来的文件的排版，注释。</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="632-%E5%AE%89%E5%85%A8%E4%BF%9D%E6%8A%A4" href="https://github.com/springside/springside4/wiki/redis#632-%E5%AE%89%E5%85%A8%E4%BF%9D%E6%8A%A4" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">6.3.2
 安全保护</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">在配置文件里设置密码：requirepass foobar。</li><li style="border:0px; margin:0px; padding:0px">禁止某些危险命令，比如残暴的FlushDB，将它rename成”&quot;：rename-command FLUSHDB “”。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="64-%E7%9B%91%E6%8E%A7%E4%B8%8E%E7%BB%B4%E6%8A%A4" href="https://github.com/springside/springside4/wiki/redis#64-%E7%9B%91%E6%8E%A7%E4%B8%8E%E7%BB%B4%E6%8A%A4" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>6.4
 监控与维护</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<span style="border:0px; margin:0px; padding:0px">综述：</span>&nbsp;<a target="_blank" href="http://blog.nosqlfan.com/html/4166.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis监控技巧</a></p>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="641-%E7%9B%91%E6%8E%A7%E6%8C%87%E4%BB%A4" href="https://github.com/springside/springside4/wiki/redis#641-%E7%9B%91%E6%8E%A7%E6%8C%87%E4%BB%A4" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">6.4.1
 监控指令</span></h4>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://redis.readthedocs.org/en/latest/server/info.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Info</a>指令将返回非常丰富的信息。 着重监控检查内存使用，是否已接近上限，used_memory是Redis申请的内存，used_memory_rss是操作系统分配给Redis的物理内存，两者之间隔着碎片，隔着Swap。
 还有重点监控 AOF与RDB文件的保存情况，以及master-slave的关系。Statistic 信息还包括key命中率，所有命令的执行次数，所有client连接数量等，&nbsp;<a target="_blank" href="http://redis.readthedocs.org/en/latest/server/config_resetstat.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">CONFIG
 RESETSTAT</a>&nbsp;可重置为0。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://redis.readthedocs.org/en/latest/server/monitor.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Monitor</a>指令可以显示Server收到的所有指令，主要用于debug，影响性能，生产环境慎用。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
SlowLog 检查慢操作(见2.性能)。</p>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="642-trouble-shooting%E6%94%AF%E6%8C%81" href="https://github.com/springside/springside4/wiki/redis#642-trouble-shooting%E6%94%AF%E6%8C%81" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">6.4.2
 Trouble Shooting支持</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">日志可以动态的设置成verbose/debug模式，但不见得有更多有用的log可看,verbose还会很烦的每5秒打印当前的key情况和client情况。指令为config set loglevel verbose。</li><li style="border:0px; margin:0px; padding:0px">最爱Redis的地方是代码只有2.3万行，而且编码优美，而且huangz同学还在原来的注释上再加上了中文注释——<a target="_blank" href="https://github.com/huangz1990/annotated_redis_source/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis
 2.6源码中文注释版</a>&nbsp;，所以虽然是C写的代码，虽然有十年没看过C代码，但这几天trouble shooting毫无难度，一看就懂。</li><li style="border:0px; margin:0px; padding:0px">Trobule shotting的经历证明antirez处理issue的速度非常快(如果你的issue言之有物的话)，比Weblogic之类的商业支持还好。</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="643-%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E7%BB%B4%E6%8A%A4" href="https://github.com/springside/springside4/wiki/redis#643-%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%87%E4%BB%B6%E7%BB%B4%E6%8A%A4" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">6.4.3
 持久化文件维护</span></h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">如果AOF文件在写入过程中crash，可以用redis-check-aof修复，见5.1.2</li><li style="border:0px; margin:0px; padding:0px">如果AOF rewrite和 RDB snapshot的过程中crash，会留下无用的临时文件，需要定期扫描删除。</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="644-%E4%B8%89%E6%96%B9%E5%B7%A5%E5%85%B7" href="https://github.com/springside/springside4/wiki/redis#644-%E4%B8%89%E6%96%B9%E5%B7%A5%E5%85%B7" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a><span style="border:0px; margin:0px; padding:0px">6.4.4
 三方工具</span></h4>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
官网列出了如下工具，但暂时没发现会直接拿来用的：</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://www.nkrode.com/article/real-time-dashboard-for-redis" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis Live</a>，基于Python的web应用，使用Info和Monitor获得系统情况和指令统计分析。
 因为Monitor指令影响性能，所以建议用cron定期运行，每次偷偷采样两分钟的样子。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="https://github.com/ErikDubbelboer/phpRedisAdmin" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">phpRedisAdmin</a>，基于php的Web应用，目标是MysqlAdmin那样的管理工具，可以管理每一条Key的情况，但它的界面应该只适用于Key的数量不太多的情况，<a target="_blank" href="http://dubbelboer.com/phpRedisAdmin/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Demo</a>。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="https://github.com/Instagram/redis-faina" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis Faina</a>，基于Python的命令行，Instagram出品，用户自行获得Monitor的输出后发给它进行统计分析。由于Monitor输出的&#26684;式在Redis版本间不一样，要去<span class="wp_keywordlink" style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://blog.jobbole.com/6492/" title="GitHub如何运作系列文章" target="_blank" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">GitHub</a></span>下最新版。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="https://github.com/sripathikrishnan/redis-rdb-tools" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis-rdb-tools</a>&nbsp;基于Python的命令行，可以分析RDB文件每条Key对应value所占的大小，还可以将RDB
 dump成普通文本文件然后比较两个库是否一致，还可以将RDB输出成JSON&#26684;式，可能是最有用的一个了。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="https://github.com/antirez/redis-sampler" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis Sampler</a>，基于Ruby的命令行，antirez自己写的，统计数据分布情况。</li></ul>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="7-java-driver" href="https://github.com/springside/springside4/wiki/redis#7-java-driver" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>7. Java Driver</h2>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="71-driver%E9%80%89%E6%8B%A9" href="https://github.com/springside/springside4/wiki/redis#71-driver%E9%80%89%E6%8B%A9" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>7.1 Driver选择</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
各个Driver好像只有<a target="_blank" href="https://github.com/xetorthio/jedis/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Jedis</a>比较活跃，但也5个月没提交了，也是Java里唯一的Redis官方推荐。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://www.springsource.org/spring-data/redis" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Spring Data Redis</a>的封装并不太必要，因为Jedis已足够简单，没有像Spring Data MongoDB对MongoDB java driver的封装那样大幅简化代码，顶多就是加强了一点点点pipeline和transaction状态下的coding，禁止了一些此状态下不能用的命令。而所谓屏蔽各种底层driver的差异并不太吸引人，因为我就没打算选其他几种driver。有兴趣的可以翻翻<a target="_blank" href="https://github.com/SpringSource/spring-data-redis/blob/master/src/main/java/org/springframework/data/redis/connection/jedis/JedisConnection.java" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">它的JedisConnection代码</a>。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
所以，SpringSide直接在Jedis的基础上，按Spring的风&#26684;封装了一个JedisTemplate，负责从池中获取与归还Jedis实例，处理异常。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="72-jedis%E7%9A%84%E7%BB%86%E8%8A%82" href="https://github.com/springside/springside4/wiki/redis#72-jedis%E7%9A%84%E7%BB%86%E8%8A%82" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>7.2 Jedis的细节</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Jedis基于Apache Commons Pool做的连接池，默认MaxActive最大连接数只有8，必须重新设置。而且MaxIdle也要相应增大，否则所有新建的连接用完即弃，然后会不停的重新连接。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
另外Jedis设定了每30秒对所有连接执行一次ping，以发现失效的连接，这样每30秒会有一个拿不到连接的高峰。但效果如何需要独立分析。比如系统高峰之后可能有一长段时间很闲，而且Redis Server那边做了Timeout控制会把连接断掉，这时候做idle checking是有意义的，但30秒一次也太过频繁了。否则关掉它更好。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Jedis的blocking pop函数，应用执行ExecutorService.shutdownNow()中断线程时并不能把它中断，见<a target="_blank" href="https://groups.google.com/forum/?fromgroups=#!topic/jedis_redis/u1h4-7dlrAs" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">讨论组</a>。两个解决方法：</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">不要用不限时的blocking popup，传多一个超时时间参数，如5秒。</li><li style="border:0px; margin:0px; padding:0px">找地方将调用blocking popup的jedis保存起来，shutdown时主动调用它的close。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="73-redis%E5%AF%B9client%E7%AB%AF%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%A4%84%E7%90%86" href="https://github.com/springside/springside4/wiki/redis#73-redis%E5%AF%B9client%E7%AB%AF%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%A4%84%E7%90%86" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>7.3
 Redis对Client端连接的处理</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">Redis默认最大连接数是一万。</li><li style="border:0px; margin:0px; padding:0px">Redis默认不对Client做Timeout处理，可以用timeout 项配置，但即使配了也不会非常精确。</li></ul>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="8-windows%E7%9A%84%E7%89%88%E6%9C%AC" href="https://github.com/springside/springside4/wiki/redis#8-windows%E7%9A%84%E7%89%88%E6%9C%AC" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>8. Windows的版本</h2>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Windows版本方便对应用的本地开发调试，但Redis并没有提供，好在微软提供了一个依赖LibUV实现兼容的补丁，<a target="_blank" href="https://github.com/MSOpenTech/redis%EF%BC%8C%E4%BD%86redis%E4%BD%9C%E8%80%85%E6%8B%92%E7%BB%9D%E5%90%88%E5%B9%B6%E5%88%B0master%E4%B8%AD%EF%BC%8C%E5%BE%AE%E8%BD%AF%E5%8F%AA%E5%A5%BD%E8%8B%A6%E6%86%8B%E7%9A%84%E6%97%B6%E6%97%B6%E4%BA%BA%E5%B7%A5%E5%90%8C%E6%AD%A5%E3%80%82" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">https://github.com/MSOpenTech/redis，但redis作者拒绝合并到master中，微软只好苦憋的时时人工同步。</a>&nbsp;目前的稳定版是2.6版本，支持Lua脚本。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
因为<span class="wp_keywordlink" style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://blog.jobbole.com/25775/" title="Git详解系列文章" target="_blank" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">git</a></span>hub现在已经没有Download服务了，所以编译好的可执行文件藏在这里：</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="https://github.com/MSOpenTech/redis/tree/2.6/bin/release" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">https://github.com/MSOpenTech/redis/tree/2.6/bin/release</a></li></ul>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="9-%E6%88%90%E5%8A%9F%E6%A1%88%E4%BE%8B" href="https://github.com/springside/springside4/wiki/redis#9-%E6%88%90%E5%8A%9F%E6%A1%88%E4%BE%8B" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>9.
 成功案例</h2>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
注：下文中的链接都是网站的架构描述文档。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://www.infoq.com/presentations/Real-Time-Delivery-Twitter" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Twitter</a>和<a target="_blank" href="http://www.infoq.com/cn/presentations/tfl-sina-weibo-platform-redis-practice" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">新浪微博</a>，
 都属于将Redis各种数据结构用得出神入化的那种，如何发布大V如奥巴马的消息是它们最头痛的问题。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://highscalability.com/blog/2013/5/20/the-tumblr-architecture-yahoo-bought-for-a-cool-billion-doll.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Tumblr</a>： 11亿美刀卖给Yahoo的图片日志网站，22
 台Redis server，每台运行8 – 32个实例，总共100多个Redis实例在跑。有着Redis has been completely problem free and the community is great的崇高评价。Redis在里面扮演了八爪鱼多面手的角色：</p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">Dashboard的海量通知的存储。</li><li style="border:0px; margin:0px; padding:0px">Dashboard的二级索引。</li><li style="border:0px; margin:0px; padding:0px">存储海量短链接的HBase前面的缓存。</li><li style="border:0px; margin:0px; padding:0px">Gearman Job Queue的存储。</li><li style="border:0px; margin:0px; padding:0px">正在替换另外30台memcached。</li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Instagram</a>&nbsp;，曾经，Redis
 powers their main feed, activity feed, sessions system, and&nbsp;<a target="_blank" href="http://highscalability.com/blog/2012/4/16/instagram-architecture-update-whats-new-with-instagram.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">other
 services</a>。但可惜目前<a target="_blank" href="http://planetcassandra.org/blog/post/instagram-making-the-switch-to-cassandra-from-redis-75-instasavings" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">已迁往Cassandra</a>，说新架构只需1/4的硬件费用，是的，就是那个导致Digg
 CTO辞职的Canssandra。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<a target="_blank" href="http://code.flickr.net/2011/10/11/talk-real-time-updates-on-the-cheap-for-fun-and-profit/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Flickr</a>&nbsp;, 依然是asynchronous task system
 and rudimentary queueing system。之前Task system放在mysql innodb，根本，撑不住。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<span style="border:0px; margin:0px; padding:0px">The Others：</span></p>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://nosql.mypopescu.com/post/17658415847/polyglot-persistence-at-pinterest-redis-membase" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Pinterest</a>，混合使用MySQL、Membase与Redis作为存储。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://highscalability.com/blog/2012/4/2/youporn-targeting-200-million-views-a-day-and-beyond.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Youporn.com</a>，100%的Redis，MySQL只用于创建新需求用到的sorted
 set，300K QPS的大压力。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://tech.naver.jp/blog/?p=1420" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">日本微信</a>&nbsp;，Redis在前负责异步Job Queue和O(n)的数据，且作为O(n*t)数据的cache，HBase在后，负责O(n*t)数据，
 n是用户，t是时间。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://highscalability.com/blog/2011/3/3/stack-overflow-architecture-update-now-at-95-million-page-vi.html" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">StackOverflow</a>&nbsp;，2
 Redis servers for distribute caching，好穷好轻量。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="https://github.com/blog/530-how-we-made-github-fast" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Github</a>，任务系统<a target="_blank" href="http://github.com/defunkt/resque" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Resque</a>的存储。</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="https://github.com/discourse/discourse" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Discourge</a>，号称是为下一个十年打造的论坛系统， We use Redis
 for our job queue, rate limiting, as a cache and for transient data，刚好和我司的用法一样。</li></ul>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="10-in-springside" href="https://github.com/springside/springside4/wiki/redis#10-in-springside" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>10. In SpringSide</h2>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
extension modules项目封装了常用的函数与场景，showcase example的src/demo/redis目录里有各场景的benchmark测试。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="101-jedis-template" href="https://github.com/springside/springside4/wiki/redis#101-jedis-template" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>10.1 Jedis Template</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
典型的Spring Template风&#26684;，和JdbcTemplate，HibernateTemplate一样，封装从JedisPool获取与归还Connecton的代码，有带返回&#20540;与无返回&#20540;两种返回接口。同时，对最常用的Jedis调用，直接封装了一系列方法。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="102-scheduler%E4%B8%8Emaster-elector" href="https://github.com/springside/springside4/wiki/redis#102-scheduler%E4%B8%8Emaster-elector" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>10.2
 Scheduler与Master Elector</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Scheduler实现了基于Redis的高并发单次定时任务分发。具体选型见<a target="_blank" href="https://github.com/springside/springside4/wiki/Schedule" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Scheduler</a>章节。</p>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
Master Elector基于redis setNx()与expire()两个api实现，与基于Zookeeper，Hazelcast实现的效果类&#20284;。</p>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="103-showcase%E4%B8%AD%E7%9A%84demo" href="https://github.com/springside/springside4/wiki/redis#103-showcase%E4%B8%AD%E7%9A%84demo" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>10.3 Showcase中的Demo</h3>
<p style="border:0px; margin-top:0px; margin-bottom:20px; padding-top:0px; padding-bottom:0px; font-size:14px; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
计有Session，Counter，Scheduler 与 Master Elector四款。</p>
<h2 style="border:0px; margin:-9px 0px 20px; padding:0px; font-size:24px; line-height:36px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="%E9%99%84%E5%BD%95" href="https://github.com/springside/springside4/wiki/redis#%E9%99%84%E5%BD%95" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>附录</h2>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="%E9%99%84%E5%BD%951-%E5%AF%B9redisconf%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E7%9A%84%E4%BF%AE%E6%94%B9" href="https://github.com/springside/springside4/wiki/redis#%E9%99%84%E5%BD%951-%E5%AF%B9redisconf%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E7%9A%84%E4%BF%AE%E6%94%B9" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>附录1：
 对redis.conf默认配置的修改</h3>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="master%E4%B8%8A" href="https://github.com/springside/springside4/wiki/redis#master%E4%B8%8A" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>Master上</h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">daemonize no -&gt; yes ，启动daemonize模式，注意如果用daemon工具启动redis-server时设回false。</li><li style="border:0px; margin:0px; padding:0px">logfile stdout -&gt; /var/log/redis/redis.log ，指定日志文件</li><li style="border:0px; margin:0px; padding:0px">注释掉RDB的所有触发规则，在Master不保存RDB文件。</li><li style="border:0px; margin:0px; padding:0px">dir ./ -&gt; /var/data/redis，指定持久化文件及临时文件目录.</li><li style="border:0px; margin:0px; padding:0px">maxmemory，设置为可用内存/2.</li><li style="border:0px; margin:0px; padding:0px">(可选)appendonly no-&gt;yes，打开AOF文件.</li><li style="border:0px; margin:0px; padding:0px">auto-aof-rewrite-percentage 100, 综合考虑硬盘大小，可接受重启加载延时等尽量的大，减少AOF rewrite频率.</li><li style="border:0px; margin:0px; padding:0px">auto-aof-rewrite-min-size 64mb，同上，起码设为5G.</li><li style="border:0px; margin:0px; padding:0px">client-output-buffer-limit slave 256mb 64mb 60. 考虑Traffic及Slave同步是RDB加载所需时间，正确设置避免buffer撑爆client被关掉后又要重新进行全同步。</li><li style="border:0px; margin:0px; padding:0px">安全配置，可选。</li></ul>
<h4 style="border:0px; margin:-6px 0px 0px; padding:0px; font-size:16px; font-weight:normal; line-height:24px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="slave%E4%B8%8A" href="https://github.com/springside/springside4/wiki/redis#slave%E4%B8%8A" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>Slave上</h4>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">设置RDB保存频率，因为RDB只作为Backup工具，只保留15分钟的规则，设置为15分钟保存一次就够了save 900 1。</li><li style="border:0px; margin:0px; padding:0px">(可选)slaveof 设置master地址，也可动态设定。</li><li style="border:0px; margin:0px; padding:0px">repl-timeout 60, 适当加大比如120，避免master实际还没倒掉就认为master倒了。</li></ul>
<h3 style="border:0px; margin:-8px 0px 20px; padding:0px; font-size:20px; line-height:30px; font-family:Arial,sans-serif; color:rgb(51,51,51)">
<a target="_blank" name="%E9%99%84%E5%BD%952%E7%89%88%E6%9C%AC%E5%8F%98%E6%9B%B4%E5%8E%86%E5%8F%B2" href="https://github.com/springside/springside4/wiki/redis#%E9%99%84%E5%BD%952%E7%89%88%E6%9C%AC%E5%8F%98%E6%9B%B4%E5%8E%86%E5%8F%B2" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)"></a>附录2：版本变更历史</h3>
<ul style="border:0px; margin:0px 0px 20px; padding:0px; font-size:14px; list-style-position:inside; color:rgb(51,51,51); font-family:Arial,sans-serif; line-height:21px">
<li style="border:0px; margin:0px; padding:0px">3.0.1版 2013-7-10，在微博发布后反应良好，持续修改。</li><li style="border:0px; margin:0px; padding:0px">3.0版 2013-6-29，在公司Workshop后修订，提高wiki的可读性而不只是简单的记录知识点。 ### 附录3：其他参考资料</li><li style="border:0px; margin:0px; padding:0px"><a target="_blank" href="http://timyang.net/data/redis-misunderstanding/" rel="nofollow" style="border:0px; margin:0px; padding:0px; text-decoration:none; color:rgb(0,153,204)">Redis的几个认识误区</a>&nbsp;by Tim yang。</li></ul>
<div><span style="font-family:Arial,sans-serif; color:#333333"><span style="font-size:14px; line-height:21px"><br>
</span></span></div>
<div><span style="font-family:Arial,sans-serif; color:#333333"><span style="font-size:14px; line-height:21px">转载自 伯乐在线--<span style="color:rgb(51,51,51); font-family:Arial,sans-serif; font-size:14px; line-height:21px">江南白衣</span></span></span></div>
   
</div>




<!-- Baidu Button BEGIN -->




<div class="bdsharebuttonbox tracking-ad" style="float: right;" data-mod="popu_172">
<a href="#" class="bds_more" data-cmd="more" style="background-position:0 0 !important; background-image: url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=d754dcc0.png) !important"></a>
<a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"  style="background-position:0 -52px !important"></a>
<a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"style="background-position:0 -104px !important"></a>
<a href="#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博"style="background-position:0 -260px !important"></a>
<a href="#" class="bds_renren" data-cmd="renren" title="分享到人人网"style="background-position:0 -208px !important"></a>
<a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"style="background-position:0 -1612px !important" ></a>
</div>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<!-- Baidu Button END -->

   <link rel="stylesheet" href="http://static.blog.csdn.net/css/blog_detail.css" />

    
<!--172.16.140.13-->

<!-- Baidu Button BEGIN -->
<script type="text/javascript" id="bdshare_js" data="type=tools&amp;uid=1536434" ></script>
<script type="text/javascript" id="bdshell_js"></script>
<script type="text/javascript">
    document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
</script>
<!-- Baidu Button END -->

 


        <div id="digg" ArticleId="18984355" >
            <dl id="btnDigg" class="digg digg_disable"  onclick="btndigga();">
               
                 <dt>顶</dt>
                <dd>1</dd>
            </dl>
           
              
            <dl id="btnBury" class="digg digg_disable"  onclick="btnburya();">
              
                  <dt>踩</dt>
                <dd>0</dd>               
            </dl>
            
        </div>
     <div class="tracking-ad" data-mod="popu_222"><a href="javascript:void(0);" >&nbsp;</a>   </div>
    <div class="tracking-ad" data-mod="popu_223"> <a href="javascript:void(0);" >&nbsp;</a></div>
    <script type="text/javascript">
                function btndigga() {
                    $(".tracking-ad[data-mod='popu_222'] a").click();
                }
                function btnburya() {
                    $(".tracking-ad[data-mod='popu_223'] a").click();
                }
            </script>

   <ul class="article_next_prev">
                <li class="prev_article"><span  onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian']);location.href='/andy1219111/article/details/17610293';">上一篇</span><a href="/andy1219111/article/details/17610293" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian'])">为什么要用smarty模板引擎</a></li>
                <li class="next_article"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian']);location.href='/andy1219111/article/details/18989725';">下一篇</span><a href="/andy1219111/article/details/18989725" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian'])">PHP程序员突破成长瓶颈 – 附学习建议</a></li>
    </ul>

    <div style="clear:both; height:10px;"></div>


        <div class="similar_article"  style="display:none">
                <h4>我的同类文章</h4>
                <div class="similar_c"style="margin:20px 0px 0px 0px">
                    <div class="similar_c_t">
                                <label class="similar_cur">
                                    <span  style="cursor:pointer"  onclick="GetCategoryArticles('1074018','andy1219111','foot','18984355');">学习笔记<em>（32）</em></span>
                                </label>
                                <label class="">
                                    <span  style="cursor:pointer"  onclick="GetCategoryArticles('1070995','andy1219111','foot','18984355');">php开发<em>（50）</em></span>
                                </label>
                    </div>
                   
                    <div class="similar_wrap tracking-ad" data-mod="popu_141"  style="max-height:195px;">
                        <a href="http://blog.csdn.net" style="display:none">http://blog.csdn.net</a>
                        <ul class="similar_list fl">                          
                        </ul>

                        <ul class="similar_list fr">                           
                        </ul>
                    </div>
                </div>
            </div>    
    <script  type="text/javascript">
        $(function () {
            GetCategoryArticles('1074018', 'andy1219111','foot','18984355');
        });
    </script>
      
</div>

     <div>
                <script type="text/javascript">
                    /*博客内容页下方Banner1-960*90，创建于2016-12-13*/
                    var cpro_id = "u2843955";
                </script>
                <script type="text/javascript" src="http://cpro.baidustatic.com/cpro/ui/c.js"></script>
    </div>

<div id="suggest"></div>
         <script  language="javascript" type='text/javascript'>     
             $(function(){
                 $.get("/andy1219111/svc/GetSuggestContent/18984355",function(data){
                     $("#suggest").html(data);
                 });     
             });             
         </script>  


<style>
.blog-ass-articl dd {
color: #369;
width: 99%; /*修改行*/
float: left;
overflow: hidden;
font: normal normal 12px/23px "SimSun";
height: 23px;
margin: 0;
padding: 0 0 0 10px;
margin-right: 30px;
background: url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;
}
</style>

 <link rel="stylesheet" href="http://static.blog.csdn.net/css/replace.css"/>
<div id="relate" data-mod="popu_218"  class="tracking-ad">
        <div class="relate_t">
            <h3><span>参考知识库</span></h3>
        </div>
        <div class="relate_c">
        </div>
</div>
 

<dl class="blog-ass-articl" id="res-relatived" > 
    <div class="embody embody_b" id="libkeyparent"  style="display:none">
            <span class="embody_t">更多资料请参考：</span>
            <div class="embody_c" id="libkey"></div>
    </div>


     <dt><span>猜你在找</span></dt>    


   


    <div id="adCollege" style="width: 42%;float: left;"> 
        <script src="http://csdnimg.cn/jobreco/job_reco.js" type="text/javascript"></script> 
        <script type="text/javascript">
            csdn.position.showEdu({
                sourceType: "blog",
                searchType: "detail",
                searchKey: "18984355",
                username: "",
                recordcount: "5",
                containerId: "adCollege" //容器DIV的id。 
            });
        </script> 
    </div>  

    
     <div id="res"  data-mod="popu_36"  class="tracking-ad" style="width: 42%;float: left;margin-right: 30px;"></div>
   
</dl>


<script type="text/javascript">
    $(function () {
        setTimeout(function () {
            var searchtitletags = '关于Redis的常识' + ',' + $("#tags").html();
            searchService({
                index: 'blog',
                query: searchtitletags,
                from: 5,
                size: 5,
                appendTo: '#res',
                url: 'recommend',
                his: 2,
                client: "blog_cf_enhance",
                tmpl: '<dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="#{ url }" title="#{ title }" strategy="#{ strategy }">#{ title }</a></dd>'
            });
        }, 500);
    });    

 </script>  


    <div id="ad_cen">        
                    <script type="text/javascript">
                        /*博客内容页下方Banner-728*90，创建于2014-7-3*/
                        var cpro_id = "u1607657";
                    </script>
                    <script type="text/javascript" src="http://cpro.baidustatic.com/cpro/ui/c.js"></script>
    </div>  


<div class="comment_class">
    <div id="comment_title" class="panel_head">
        <span class="see_comment">查看评论</span><a name="comments"></a></div>
    <div id="comment_list">
    </div>
    <div id="comment_bar">
    </div>
    <div id="comment_form">
    </div>
    <div class="announce">
        * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
</div>

<script type="text/javascript">
    var fileName = '18984355';
    var commentscount = 1;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
    <div id="ad_bot">
    </div>
<div id="report_dialog">
</div>

<div id="d-top"  style="bottom:60px;">

        <a id="quick-reply" class="btn btn-top q-reply" title="快速回复" style="display:none;">
            <img src="http://static.blog.csdn.net/images/blog-icon-reply.png" alt="快速回复">
        </a>    
    <a id="d-top-a" class="btn btn-top backtop"  style="display: none;" title="返回顶部" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_huidaodingbu'])" style="">         
         <img src="http://static.blog.csdn.net/images/top.png" alt="TOP">
    </a>
</div>
<script type="text/javascript">
    $(function ()
    {
        $("#ad_frm_0").height("90px");
        
        setTimeout(function(){
            $("#ad_frm_2").height("200px");
        },1000);    
    });
  
</script>
<style type="text/css">
    .tag_list
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #D7CBC1;
        color: #000000;
        font-size: 12px;
        line-height: 20px;
        list-style: none outside none;
        margin: 10px 2% 0 1%;
        padding: 1px;
    }
    .tag_list h5
    {
        background: none repeat scroll 0 0 #E0DBD3;
        color: #47381C;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        padding: 0 5px;
        margin: 0;
    }
    .tag_list h5 a
    {
        color: #47381C;
    }
    .classify
    {
        margin: 10px 0;
        padding: 4px 12px 8px;
    }
    .classify a
    {
        margin-right: 20px;
        white-space: nowrap;
    }
</style>


<div class="tag_list" style="display:none"></div>
  <script  language="javascript" type='text/javascript'>     
      $(function(){
              setTimeout(function(){
                  $.get("/andy1219111/svc/GetTagContent",function(data){
                      $(".tag_list").html(data).show();
                  });     
              });
          },500);                       
 </script> 


<div id="pop_win" style="display:none ;position: absolute; z-index: 10000; border: 1px solid rgb(220, 220, 220); top: 222.5px; left: 630px; opacity: 1; background: none 0px 0px repeat scroll rgb(255, 255, 255);">
    
</div>
<div id="popup_mask"></div>
<style>
    #popup_mask
    {
        position: absolute;
        width: 100%;
        height: 100%;
        background: #000;
        z-index: 9999;
        left: 0px;
        top: 0px;
        opacity: 0.3;
        filter: alpha(opacity=30);
        display: none;
    }

</style>




<script type="text/javascript">
    $(function(){
        setTimeout(function(){
            $(".comment_body:contains('回复')").each(function(index,item){
                var u=$(this).text().split('：')[0].toString().replace("回复","")
                var thisComment=$(this);
                if(u)
                {
                    $.getJSON("https://passport.csdn.net/get/nick?callback=?", {users: u}, function(a) {
                        if(a!=null&&a.data!=null&&a.data.length>0)
                        {
                            nick=a.data[0].n; 
                            if(u!=nick)
                            {
                                thisComment.text(thisComment.text().replace(u,nick));  
                            }
                        }       
                    });  
                }
            });         

        },200);  

        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },5000);

        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },10000);

        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },15000);
        
        setTimeout(function(){
            $("a img[src='http://js.tongji.linezing.com/stats.gif']").parent().css({"position":"absolute","left":"50%"});
        },300);
    });

    function loginbox(){
        var $logpop=$("#pop_win");
        $logpop.html('<iframe src="https://passport.csdn.net/account/loginbox?service=http://static.blog.csdn.net/callback.htm" frameborder="0" height="600" width="400" scrolling="no"></iframe>');

        $('#popup_mask').css({
            opacity: 0.5,
            width: $( document ).width() + 'px',
            height:  $( document ).height() + 'px'
        });
        $('#popup_mask').css("display","block");
 
        $logpop.css( {
            top: ($( window ).height() - $logpop.height())/ 2  + $( window 
       ).scrollTop() + 'px',
            left:($( window ).width() - $logpop.width())/ 2
        } );
 
        setTimeout( function () {
            $logpop.show();
            $logpop.css( {
                opacity: 1
            } );
        }, 200 );
 
        $('#popup_mask').unbind("click");
        $('#popup_mask').bind("click", function(){
            $('#popup_mask').hide();
            var $clopop = $("#pop_win");
            $("#common_ask_div_sc").css("display","none");
            $clopop.css( {
                opacity: 0
            } );
            setTimeout( function () {
                $clopop.hide();
            }, 350 );
            return false;
        });
    }   

</script>
 <script language="javascript" type="text/javascript" src="http://ads.csdn.net/js/async_new.js"></script>      




                        <div class="clear">
                        </div>
                    </div>                   
                
            </div>
                   
           <div id="side">
               
    <div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/andy1219111" target="_blank">
    <img src="http://avatar.csdn.net/6/1/2/1_andy1219111.jpg" title="访问我的空间" style="max-width:90%"/>
    </a>
    <br />
    <span><a href="http://my.csdn.net/andy1219111" class="user_name" target="_blank">andy1219111</a></span>
</div>
<div class="interact">

    <a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]"></a>

 <a href="javascript:void(0);" class="letter"  title="[发私信]" onclick="window.open('http://msg.csdn.net/letters/model?receiver=andy1219111','_blank','height=350,width=700');_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_sixin'])"></a>  
</div>
<div id="blog_medal">
                <div id="bms_box">
               </div>
</div>
<ul id="blog_rank">
    <li>访问：<span>492462次</span></li>
    <li>积分：<span>3682</span> </li>    
    <li >等级： <span style="position:relative;display:inline-block;z-index:1" >
            <img src="http://c.csdnimg.cn/jifen/images/xunzhang/jianzhang/blog5.png" alt="" style="vertical-align: middle;" id="leveImg">
            <div id="smallTittle" style=" position: absolute;  left: -24px;  top: 25px;  text-align: center;  width: 101px;  height: 32px;  background-color: #fff;  line-height: 32px;  border: 2px #DDDDDD solid;  box-shadow: 0px 2px 2px rgba (0,0,0,0.1);  display: none;   z-index: 999;">
            <div style="left: 42%;  top: -8px;  position: absolute;  width: 0;  height: 0;  border-left: 10px solid transparent;  border-right: 10px solid transparent;  border-bottom: 8px solid #EAEAEA;"></div>
            积分：3682 </div>
        </span>  </li>
    <li>排名：<span>第7131名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>62篇</span></li>
    <li>转载：<span>39篇</span></li>
    <li>译文：<span>3篇</span></li>
    <li>评论：<span>31条</span></li>
</ul>
</ul>
</div>


<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字" /></span>
        <input id="btnSubmit" type="button" value="搜索" title="search in blog" />
        <input type="hidden" name="q" id="inputQ" />
        <input type="hidden" name="t" value="blog" />
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div>

<script type="text/javascript">
    $(function () {
        $("#btnSubmit").click(function () {           
            search();
        });

        $("#frmSearch").submit(function () {
            search();
            return false;
        });

        function search()
        {
            var url = "http://so.csdn.net/so/search/s.do?q=" + encodeURIComponent($("#inputSearch").val()) + "&u=" + username + "&t=blog";
            window.location.href = url;
        }   
    });
</script><div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">    
                 <li>
                    <a href="/andy1219111/article/category/1070995" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">php开发</a><span>(51)</span>
                </li>
                 <li>
                    <a href="/andy1219111/article/category/1070996" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">web前台技术</a><span>(13)</span>
                </li>
                 <li>
                    <a href="/andy1219111/article/category/1070997" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">杂谈</a><span>(11)</span>
                </li>
                 <li>
                    <a href="/andy1219111/article/category/1073799" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">团队管理</a><span>(1)</span>
                </li>
                 <li>
                    <a href="/andy1219111/article/category/1073800" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">项目管理</a><span>(4)</span>
                </li>
                 <li>
                    <a href="/andy1219111/article/category/1074018" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">学习笔记</a><span>(33)</span>
                </li>
                 <li>
                    <a href="/andy1219111/article/category/5847963" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">linux服务器监控</a><span>(1)</span>
                </li>
                 <li>
                    <a href="/andy1219111/article/category/5847965" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">python</a><span>(1)</span>
                </li>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list">
<!--归档统计-->
<li><a href="/andy1219111/article/month/2015/09">2015年09月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2014/11">2014年11月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2014/10">2014年10月</a><span>(2)</span></li><li><a href="/andy1219111/article/month/2014/09">2014年09月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2014/08">2014年08月</a><span>(2)</span></li><li><a href="/andy1219111/article/month/2014/07">2014年07月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2014/06">2014年06月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2014/05">2014年05月</a><span>(2)</span></li><li><a href="/andy1219111/article/month/2014/04">2014年04月</a><span>(3)</span></li><li><a href="/andy1219111/article/month/2014/03">2014年03月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2014/02">2014年02月</a><span>(3)</span></li><li><a href="/andy1219111/article/month/2013/12">2013年12月</a><span>(3)</span></li><li><a href="/andy1219111/article/month/2013/11">2013年11月</a><span>(2)</span></li><li><a href="/andy1219111/article/month/2013/10">2013年10月</a><span>(5)</span></li><li><a href="/andy1219111/article/month/2013/09">2013年09月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2013/06">2013年06月</a><span>(3)</span></li><li><a href="/andy1219111/article/month/2013/05">2013年05月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2013/04">2013年04月</a><span>(3)</span></li><li><a href="/andy1219111/article/month/2013/03">2013年03月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2013/01">2013年01月</a><span>(3)</span></li><li><a href="/andy1219111/article/month/2012/10">2012年10月</a><span>(2)</span></li><li><a href="/andy1219111/article/month/2012/09">2012年09月</a><span>(3)</span></li><li><a href="/andy1219111/article/month/2012/08">2012年08月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2012/07">2012年07月</a><span>(3)</span></li><li><a href="/andy1219111/article/month/2012/06">2012年06月</a><span>(12)</span></li><li><a href="/andy1219111/article/month/2012/05">2012年05月</a><span>(6)</span></li><li><a href="/andy1219111/article/month/2012/04">2012年04月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2012/03">2012年03月</a><span>(5)</span></li><li><a href="/andy1219111/article/month/2012/02">2012年02月</a><span>(24)</span></li><li><a href="/andy1219111/article/month/2011/12">2011年12月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2011/11">2011年11月</a><span>(1)</span></li><li><a href="/andy1219111/article/month/2011/10">2011年10月</a><span>(5)</span></li>
</div>
</ul>
</div>
<div id="hotarticls" class="panel">
<ul class="panel_head">
    <span>       
阅读排行    </span>
</ul>

<ul class="panel_body itemlist">
<li>
<a href="/andy1219111/article/details/6914942" title="如何设置jquery的ajax方法为同步">如何设置jquery的ajax方法为同步</a><span>(177687)</span>
</li>
<li>
<a href="/andy1219111/article/details/7599336" title="memcache分布式实现、memcache分布式的数据同步、memcache保存session数据的实现">memcache分布式实现、memcache分布式的数据同步、memcache保存session数据的实现</a><span>(26355)</span>
</li>
<li>
<a href="/andy1219111/article/details/38335987" title="图片处理神器ImageMagick以及PHP的imagick扩展">图片处理神器ImageMagick以及PHP的imagick扩展</a><span>(24845)</span>
</li>
<li>
<a href="/andy1219111/article/details/8863506" title="关于对html5播放实时视频流的预研">关于对html5播放实时视频流的预研</a><span>(17509)</span>
</li>
<li>
<a href="/andy1219111/article/details/22716315" title="SSL证书与Https应用部署小结">SSL证书与Https应用部署小结</a><span>(14098)</span>
</li>
<li>
<a href="/andy1219111/article/details/24348761" title="使用TCPDF插件生成pdf以及pdf的中文处理">使用TCPDF插件生成pdf以及pdf的中文处理</a><span>(12715)</span>
</li>
<li>
<a href="/andy1219111/article/details/8471740" title="open flash chart2使用详解">open flash chart2使用详解</a><span>(11729)</span>
</li>
<li>
<a href="/andy1219111/article/details/8674445" title="Zend Studio 配色方案插件">Zend Studio 配色方案插件</a><span>(11023)</span>
</li>
<li>
<a href="/andy1219111/article/details/7718553" title="如何关闭Apache服务器的TRACE请求">如何关闭Apache服务器的TRACE请求</a><span>(8311)</span>
</li>
<li>
<a href="/andy1219111/article/details/18984355" title="关于Redis的常识">关于Redis的常识</a><span>(8272)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/andy1219111/article/details/6914942" title="如何设置jquery的ajax方法为同步">如何设置jquery的ajax方法为同步</a><span>(7)</span>
</li>
<li>
<a href="/andy1219111/article/details/12943699" title="ubuntu12.04 apt-get upgrade失败的问题">ubuntu12.04 apt-get upgrade失败的问题</a><span>(4)</span>
</li>
<li>
<a href="/andy1219111/article/details/24348761" title="使用TCPDF插件生成pdf以及pdf的中文处理">使用TCPDF插件生成pdf以及pdf的中文处理</a><span>(3)</span>
</li>
<li>
<a href="/andy1219111/article/details/7239079" title="CodeIgniter中URL含有中文字符串的解决方案">CodeIgniter中URL含有中文字符串的解决方案</a><span>(2)</span>
</li>
<li>
<a href="/andy1219111/article/details/8863506" title="关于对html5播放实时视频流的预研">关于对html5播放实时视频流的预研</a><span>(2)</span>
</li>
<li>
<a href="/andy1219111/article/details/7258290" title="LAMP网站架构各模块配置的分析">LAMP网站架构各模块配置的分析</a><span>(2)</span>
</li>
<li>
<a href="/andy1219111/article/details/8475785" title="如何使ofc2的Y轴支持中文">如何使ofc2的Y轴支持中文</a><span>(1)</span>
</li>
<li>
<a href="/andy1219111/article/details/7353824" title="js跨域取数据功能的实现">js跨域取数据功能的实现</a><span>(1)</span>
</li>
<li>
<a href="/andy1219111/article/details/7599336" title="memcache分布式实现、memcache分布式的数据同步、memcache保存session数据的实现">memcache分布式实现、memcache分布式的数据同步、memcache保存session数据的实现</a><span>(1)</span>
</li>
<li>
<a href="/andy1219111/article/details/7701478" title="Ubuntu Linux系统下apt-get命令详解">Ubuntu Linux系统下apt-get命令详解</a><span>(1)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel tracking-ad" data-mod="popu_4">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend">
<ul>
<li><a href="http://blog.csdn.net/laoyang360/article/details/53843771" target="_blank">* 而立之年——三线城市程序员的年终告白</a></li>
<li><a href="http://blog.csdn.net/sdkfjksf/article/details/54380659" 
target="_blank">* Java集合框架中隐藏的设计套路</a></li>
<li><a href="http://blog.csdn.net/jiangwei0910410003/article/details/54092364" 
target="_blank">* Python脚本下载今日头条视频(附加Android版本辅助下载器)</a></li>
<li><a href="http://blog.csdn.net/caowenbin/article/details/54406716" target="_blank">* 人工智能的冷思考</a></li>
<li><a href="http://blog.csdn.net/it_talk/article/details/54346566" 
target="_blank">* React Native 实战系列教程之热更新原理分析与实现</a></li>


</ul></ul>
</div>


<div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
   
         <a href="/andy1219111/article/details/18984355#comments">关于Redis的常识</a>
    <p style="margin:0px;"><a href="/u013036278" class="user_name">u013036278</a>:
很深入的研究了，还需要再研究一下
    </p>
    </li>
    <li>
   
         <a href="/andy1219111/article/details/6914942#comments">如何设置jquery的ajax方法为同步</a>
    <p style="margin:0px;"><a href="/qq_33233769" class="user_name">qq_33233769</a>:
问题已解决。谢谢。
    </p>
    </li>
    <li>
   
         <a href="/andy1219111/article/details/8950349#comments">AJAX 请求区分 $_SERVER[&#39;HTTP_X_REQUESTED_WITH&#39;] 小解</a>
    <p style="margin:0px;"><a href="/fox_lin" class="user_name">fox_lin</a>:
good
    </p>
    </li>
    <li>
   
         <a href="/andy1219111/article/details/7599336#comments">memcache分布式实现、memcache分布式的数据同步、memcache保存session数据的实现</a>
    <p style="margin:0px;"><a href="/u013044029" class="user_name">u013044029</a>:
MemCache就是为了让系统跑的快一点
    </p>
    </li>
    <li>
   
         <a href="/andy1219111/article/details/7599336#comments">如何设置jquery的ajax方法为同步</a>
    <p style="margin:0px;"><a href="/guangxie_1008" class="user_name">guangxie_1008</a>:
OK
    </p>
    </li>
    <li>
   
         <a href="/andy1219111/article/details/7599336#comments">如何设置jquery的ajax方法为同步</a>
    <p style="margin:0px;"><a href="/zhujianfeng2373" class="user_name">zhujianfeng2373</a>:
问题解决了，谢谢
    </p>
    </li>
    <li>
   
         <a href="/andy1219111/article/details/6914898#comments">使用jquery中的ajax方法验证表单</a>
    <p style="margin:0px;"><a href="/laotongge232425" class="user_name">laotongge232425</a>:

    </p>
    </li>
    <li>
   
         <a href="/andy1219111/article/details/24348761#comments">使用TCPDF插件生成pdf以及pdf的中文处理</a>
    <p style="margin:0px;"><a href="/S35000954" class="user_name">S35000954</a>:
回2楼，可以，你可以尝试设置其字体
    </p>
    </li>
    <li>
   
         <a href="/andy1219111/article/details/12582271#comments">PHP之APC缓存详细介绍（转）</a>
    <p style="margin:0px;"><a href="/zc4335193" class="user_name">zc4335193</a>:
亲测     PECL apc &gt;= 3.1.1  才能使用apc_inc  apc_dec函数，否...
    </p>
    </li>
    <li>
   
         <a href="/andy1219111/article/details/8863506#comments">关于对html5播放实时视频流的预研</a>
    <p style="margin:0px;"><a href="/cl394401" class="user_name">cl394401</a>:
mark
    </p>
    </li>
</ul>
</div>
    </div>
    <div class="clear">
    </div>


                   <!-- 广告位开始 --> 
                    <ins data-revive-zoneid="190" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins> 
                    <!-- 广告位结束 -->

           </div>   

            <div class="clear">
            </div>
        </div>

        

<script type="text/javascript" src="http://c.csdnimg.cn/rabbit/cnick/cnick.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/newblog.min.js"></script>


<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=958829"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/JavaScript1.js"></script>

    <script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js"></script>
<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>
<script type="text/javascript">
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<span class='tracking-ad' data-mod='popu_167'><a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target='_blank' title='在CODE上查看代码片'  style='text-indent:0;'><img src='https://code.csdn.net/assets/CODE_ico.png' width=12 height=12 alt='在CODE上查看代码片' style='position:relative;top:1px;left:2px;'/></a></span>"
                    + "<span class='tracking-ad' data-mod='popu_170'><a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target='_blank' title='派生到我的代码片' style='text-indent:0;'><img src='https://code.csdn.net/assets/ico_fork.svg' width=12 height=12 alt='派生到我的代码片' style='position:relative;top:2px;left:2px;'/></a></span>");
        }
        
        $("[code_snippet_id]").each(function () {
            __s_id = $(this).attr("code_snippet_id");
            if (__s_id != null && __s_id != "" && __s_id != 0 && parseInt(__s_id) > 70020) {
                __code_tool = __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });

        $(".bar").show();
    });
</script>





    </div>
      <!--new top-->
    
    <script id="csdn-toolbar-id" btnId="header_notice_num" wrapId="note1" count="5" subCount="5" type="text/javascript" src="http://c.csdnimg.cn/public/common/toolbar/js/toolbar.js"></script>     <!--new top-->
   
    <link href="http://c.csdnimg.cn/comm_ask/css/ask_float_block.css" type="text/css" rel="stylesheet" />
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/libs/wmd.js'></script>
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/libs/showdown.js'></script>
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/libs/prettify.js'></script>
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/apps/ask_float_block.js'></script>
   

   

  <div id="a52b5334d" style="width: 1px; height: 1px; display: none;">
                    <script id="adJs52b5334"></script>
                    <script>document.getElementById("adJs52b5334").src = "http://ads.csdn.net/js/opt/52b5334.js?t=" + Math.random();</script>
   </div>

    <link rel="stylesheet" href="http://static.blog.csdn.net/css/blog_code.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/saveToCode.js"></script>
      <script type="text/javascript" src="//csdnimg.cn/rabbit/tracking-ad/main.js?75eacd8"></script>

     <link rel="stylesheet" href="http://static.blog.csdn.net/css/fa.css" />

    <div class="pop_CA_cover"  style="display:none"></div>
    <div class="pop pop_CA"  style="display:none">
          <div class="CA_header">
            收藏助手
            <span class="cancel_icon"  id="fapancle"  onclick="$('.pop_CA').hide();$('.pop_CA_cover').hide();"></span>
          </div>
          <iframe src="" id="fa" frameborder="0" width="100%" height="360"  scrolling="no" />
    </div>
</body>
</html>   
 