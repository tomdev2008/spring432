1)基本的CRUD		 --这是基本要求
2)DAO层面的CACHE	 --理论上让dao层缓存比其它层都合适
3)M/S支持  		 --分担写的压力，提供读的效率，也是数据的可用性和可靠性
4)分表支持  		 --解决单表太大问题，早期就分表足够多吧，因为扩容实现不方便啊，需要刷数据的
5)直接支持存储过程等
6)可以按照包来分库

#项目规划
1.spring-data-mysql
2.更新维护:需要个不错的能实践的环境

#问题
1.还不太完美，需要继续精简和学习
2.需要实现个工具，根据表来自动生成DAO与PO类
  xml配置 表名称 类名称等，提供字段映射规则:如my_name_id->myNameId或用户自己指定映射关系，按照这个来自动映射

  
  

 ###如果绝对sql写在代码中，有任何干扰的话，可以将其放在配置文件中###
 ###这样做可以满足mybatis的用户习惯，但是必要性真的不大###
 StatementMetaData:构造这个类的时候好好处理下即可
 