#应用场景
1.数据发布与订阅（配置中心:在上面提到的应用场景中，有个默认前提是：数据量很小，但是数据更新可能会比较快的场景
2.负载均衡:应用多部署，已提高可用性
3.命名服务(Naming Service):全局path
4.分布式通知/协调 ZooKeeper中特有watcher注册与异步通知机制，能够很好的实现分布式环境下不同系统之间的通知与协调，实现对数据变更的实时处理
5.集群管理与Master选举
6.分布式锁
7.分布式队列

#应用立足于特性，熟悉特性，玩好特性，一切自然
